Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID PUNTOCOMA main
Rule 2     programa -> PROGRAM ID PUNTOCOMA clase main
Rule 3     programa -> PROGRAM ID PUNTOCOMA clase var main
Rule 4     programa -> PROGRAM ID PUNTOCOMA clase var funcion main
Rule 5     programa -> PROGRAM ID PUNTOCOMA clase funcion main
Rule 6     programa -> PROGRAM ID PUNTOCOMA var main
Rule 7     programa -> PROGRAM ID PUNTOCOMA var funcion main
Rule 8     programa -> PROGRAM ID PUNTOCOMA funcion main
Rule 9     main -> MAIN PARENTESISIZQ PARENTESISDER LLAVEIZQ LLAVEDER
Rule 10    main -> MAIN PARENTESISIZQ PARENTESISDER LLAVEIZQ estatuto LLAVEDER
Rule 11    clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA
Rule 12    clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA clase
Rule 13    clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ LLAVEDER PUNTOCOMA
Rule 14    clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ LLAVEDER PUNTOCOMA clase
Rule 15    clase -> CLASS ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA
Rule 16    clase -> CLASS ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA clase
Rule 17    clase -> CLASS ID LLAVEIZQ LLAVEDER PUNTOCOMA
Rule 18    clase -> CLASS ID LLAVEIZQ LLAVEDER PUNTOCOMA clase
Rule 19    tipo_clase -> PUBLIC
Rule 20    tipo_clase -> PROTECTED
Rule 21    tipo_clase -> PRIVATE
Rule 22    var -> VAR varp
Rule 23    varp -> tipo_compuesto ID PUNTOCOMA
Rule 24    varp -> tipo_compuesto ID PUNTOCOMA varp
Rule 25    varp -> tipo_simple ID PUNTOCOMA
Rule 26    varp -> tipo_simple ID PUNTOCOMA varp
Rule 27    varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
Rule 28    varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA varp
Rule 29    varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
Rule 30    varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA varp
Rule 31    tipo_simple -> INT
Rule 32    tipo_simple -> FLOAT
Rule 33    tipo_simple -> CHAR
Rule 34    tipo_compuesto -> ID
Rule 35    funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo
Rule 36    funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
Rule 37    funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo
Rule 38    funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion
Rule 39    funcion -> FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo
Rule 40    funcion -> FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
Rule 41    funcion -> FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo
Rule 42    funcion -> FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion
Rule 43    dec_var -> VAR dec_varp
Rule 44    dec_varp -> tipo_simple ID PUNTOCOMA dec_varp
Rule 45    dec_varp -> tipo_simple ID PUNTOCOMA
Rule 46    dec_varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA dec_varp
Rule 47    dec_varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
Rule 48    dec_varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA dec_varp
Rule 49    dec_varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
Rule 50    parametros -> tipo_simple ID
Rule 51    parametros -> tipo_simple ID COMA parametros
Rule 52    cuerpo -> LLAVEIZQ estatuto RETURN exp PUNTOCOMA LLAVEDER
Rule 53    cuerpo -> LLAVEIZQ estatuto LLAVEDER
Rule 54    bloque_clase -> ATTRIBUTE DOSPUNTOS atributo METHOD DOSPUNTOS metodo
Rule 55    atributo -> tipo_clase tipo_simple ID PUNTOCOMA
Rule 56    atributo -> tipo_clase tipo_simple ID PUNTOCOMA atributo
Rule 57    metodo -> tipo_clase tipo_simple ID PARENTESISIZQ parametros PARENTESISDER cuerpo
Rule 58    metodo -> tipo_clase tipo_simple ID PARENTESISIZQ parametros PARENTESISDER cuerpo metodo
Rule 59    metodo -> tipo_clase VOID ID PARENTESISIZQ parametros PARENTESISDER cuerpo
Rule 60    metodo -> tipo_clase VOID ID PARENTESISIZQ parametros PARENTESISDER cuerpo metodo
Rule 61    estatuto -> asignacion PUNTOCOMA
Rule 62    estatuto -> asignacion PUNTOCOMA estatuto
Rule 63    estatuto -> llamada PUNTOCOMA
Rule 64    estatuto -> llamada PUNTOCOMA estatuto
Rule 65    estatuto -> lee PUNTOCOMA
Rule 66    estatuto -> lee PUNTOCOMA estatuto
Rule 67    estatuto -> escribe PUNTOCOMA
Rule 68    estatuto -> escribe PUNTOCOMA estatuto
Rule 69    estatuto -> condicion
Rule 70    estatuto -> condicion estatuto
Rule 71    estatuto -> ciclo_w
Rule 72    estatuto -> ciclo_w estatuto
Rule 73    estatuto -> ciclo_f
Rule 74    estatuto -> ciclo_f estatuto
Rule 75    asignacion -> variable IGUAL exp
Rule 76    llamada -> ID PARENTESISIZQ llamadap PARENTESISDER
Rule 77    llamadap -> exp
Rule 78    llamadap -> exp COMA llamadap
Rule 79    lee -> READ PARENTESISIZQ leep PARENTESISDER
Rule 80    leep -> variable
Rule 81    leep -> variable COMA leep
Rule 82    variable -> ID
Rule 83    variable -> ID CORCHETEIZQ exp CORCHETEDER
Rule 84    variable -> ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER
Rule 85    escribe -> WRITE PARENTESISIZQ escribep PARENTESISDER
Rule 86    escribep -> exp
Rule 87    escribep -> exp COMA escribep
Rule 88    escribep -> LETRERO
Rule 89    escribep -> LETRERO COMA escribep
Rule 90    condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER
Rule 91    condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER
Rule 92    ciclo_w -> WHILE PARENTESISIZQ exp PARENTESISDER DO LLAVEIZQ estatuto LLAVEDER
Rule 93    ciclo_f -> FROM variable IGUAL exp TO exp DO LLAVEIZQ estatuto LLAVEDER
Rule 94    exp -> t_exp
Rule 95    exp -> t_exp OR exp
Rule 96    t_exp -> g_exp
Rule 97    t_exp -> g_exp AND t_exp
Rule 98    g_exp -> m_exp
Rule 99    g_exp -> m_exp EQUAL m_exp
Rule 100   g_exp -> m_exp NOT m_exp
Rule 101   g_exp -> m_exp GREATERTHAN m_exp
Rule 102   g_exp -> m_exp LESSTHAN m_exp
Rule 103   m_exp -> t
Rule 104   m_exp -> t MAS m_exp
Rule 105   m_exp -> t MENOS m_exp
Rule 106   t -> f
Rule 107   t -> f POR t
Rule 108   t -> f DIV t
Rule 109   f -> PARENTESISIZQ exp PARENTESISDER
Rule 110   f -> CTEI
Rule 111   f -> CTEF
Rule 112   f -> CTECH
Rule 113   f -> variable
Rule 114   f -> llamada

Terminals, with rules where they appear

AND                  : 97
ATTRIBUTE            : 54
CHAR                 : 33
CLASS                : 11 12 13 14 15 16 17 18
COMA                 : 51 78 81 87 89
CORCHETEDER          : 27 28 29 29 30 30 46 47 48 48 49 49 83 84 84
CORCHETEIZQ          : 27 28 29 29 30 30 46 47 48 48 49 49 83 84 84
CTECH                : 112
CTEF                 : 111
CTEI                 : 27 28 29 29 30 30 46 47 48 48 49 49 110
DIV                  : 108
DO                   : 92 93
DOSPUNTOS            : 11 12 13 14 54 54
ELSE                 : 91
EQUAL                : 99
FLOAT                : 32
FROM                 : 93
FUNC                 : 35 36 37 38 39 40 41 42
GREATERTHAN          : 101
ID                   : 1 2 3 4 5 6 7 8 11 11 12 12 13 13 14 14 15 16 17 18 23 24 25 26 27 28 29 30 34 35 36 37 38 39 40 41 42 44 45 46 47 48 49 50 51 55 56 57 58 59 60 76 82 83 84
IF                   : 90 91
IGUAL                : 75 93
INT                  : 31
LESSTHAN             : 102
LETRERO              : 88 89
LLAVEDER             : 9 10 11 12 13 14 15 16 17 18 52 53 90 91 91 92 93
LLAVEIZQ             : 9 10 11 12 13 14 15 16 17 18 52 53 90 91 91 92 93
MAIN                 : 9 10
MAS                  : 104
MENOS                : 105
METHOD               : 54
NOT                  : 100
OR                   : 95
PARENTESISDER        : 9 10 35 36 37 38 39 40 41 42 57 58 59 60 76 79 85 90 91 92 109
PARENTESISIZQ        : 9 10 35 36 37 38 39 40 41 42 57 58 59 60 76 79 85 90 91 92 109
POR                  : 107
PRIVATE              : 21
PROGRAM              : 1 2 3 4 5 6 7 8
PROTECTED            : 20
PUBLIC               : 19
PUNTOCOMA            : 1 2 3 4 5 6 7 8 11 12 13 14 15 16 17 18 23 24 25 26 27 28 29 30 35 36 37 38 39 40 41 42 44 45 46 47 48 49 52 55 56 61 62 63 64 65 66 67 68
READ                 : 79
RETURN               : 52
TO                   : 93
VAR                  : 22 43
VOID                 : 39 40 41 42 59 60
WHILE                : 92
WRITE                : 85
error                : 

Nonterminals, with rules where they appear

asignacion           : 61 62
atributo             : 54 56
bloque_clase         : 11 12 15 16
ciclo_f              : 73 74
ciclo_w              : 71 72
clase                : 2 3 4 5 12 14 16 18
condicion            : 69 70
cuerpo               : 35 36 37 38 39 40 41 42 57 58 59 60
dec_var              : 35 36 39 40
dec_varp             : 43 44 46 48
escribe              : 67 68
escribep             : 85 87 89
estatuto             : 10 52 53 62 64 66 68 70 72 74 90 91 91 92 93
exp                  : 52 75 77 78 83 84 84 86 87 90 91 92 93 93 95 109
f                    : 106 107 108
funcion              : 4 5 7 8 36 38 40 42
g_exp                : 96 97
lee                  : 65 66
leep                 : 79 81
llamada              : 63 64 114
llamadap             : 76 78
m_exp                : 98 99 99 100 100 101 101 102 102 104 105
main                 : 1 2 3 4 5 6 7 8
metodo               : 54 58 60
parametros           : 35 36 37 38 39 40 41 42 51 57 58 59 60
programa             : 0
t                    : 103 104 105 107 108
t_exp                : 94 95 97
tipo_clase           : 11 12 13 14 55 56 57 58 59 60
tipo_compuesto       : 23 24
tipo_simple          : 25 26 27 28 29 30 35 36 37 38 44 45 46 47 48 49 50 51 55 56 57 58
var                  : 3 4 6 7
variable             : 75 80 81 93 113
varp                 : 22 24 26 28 30

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID PUNTOCOMA main
    (2) programa -> . PROGRAM ID PUNTOCOMA clase main
    (3) programa -> . PROGRAM ID PUNTOCOMA clase var main
    (4) programa -> . PROGRAM ID PUNTOCOMA clase var funcion main
    (5) programa -> . PROGRAM ID PUNTOCOMA clase funcion main
    (6) programa -> . PROGRAM ID PUNTOCOMA var main
    (7) programa -> . PROGRAM ID PUNTOCOMA var funcion main
    (8) programa -> . PROGRAM ID PUNTOCOMA funcion main

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID PUNTOCOMA main
    (2) programa -> PROGRAM . ID PUNTOCOMA clase main
    (3) programa -> PROGRAM . ID PUNTOCOMA clase var main
    (4) programa -> PROGRAM . ID PUNTOCOMA clase var funcion main
    (5) programa -> PROGRAM . ID PUNTOCOMA clase funcion main
    (6) programa -> PROGRAM . ID PUNTOCOMA var main
    (7) programa -> PROGRAM . ID PUNTOCOMA var funcion main
    (8) programa -> PROGRAM . ID PUNTOCOMA funcion main

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . PUNTOCOMA main
    (2) programa -> PROGRAM ID . PUNTOCOMA clase main
    (3) programa -> PROGRAM ID . PUNTOCOMA clase var main
    (4) programa -> PROGRAM ID . PUNTOCOMA clase var funcion main
    (5) programa -> PROGRAM ID . PUNTOCOMA clase funcion main
    (6) programa -> PROGRAM ID . PUNTOCOMA var main
    (7) programa -> PROGRAM ID . PUNTOCOMA var funcion main
    (8) programa -> PROGRAM ID . PUNTOCOMA funcion main

    PUNTOCOMA       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID PUNTOCOMA . main
    (2) programa -> PROGRAM ID PUNTOCOMA . clase main
    (3) programa -> PROGRAM ID PUNTOCOMA . clase var main
    (4) programa -> PROGRAM ID PUNTOCOMA . clase var funcion main
    (5) programa -> PROGRAM ID PUNTOCOMA . clase funcion main
    (6) programa -> PROGRAM ID PUNTOCOMA . var main
    (7) programa -> PROGRAM ID PUNTOCOMA . var funcion main
    (8) programa -> PROGRAM ID PUNTOCOMA . funcion main
    (9) main -> . MAIN PARENTESISIZQ PARENTESISDER LLAVEIZQ LLAVEDER
    (10) main -> . MAIN PARENTESISIZQ PARENTESISDER LLAVEIZQ estatuto LLAVEDER
    (11) clase -> . CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA
    (12) clase -> . CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA clase
    (13) clase -> . CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ LLAVEDER PUNTOCOMA
    (14) clase -> . CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ LLAVEDER PUNTOCOMA clase
    (15) clase -> . CLASS ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA
    (16) clase -> . CLASS ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA clase
    (17) clase -> . CLASS ID LLAVEIZQ LLAVEDER PUNTOCOMA
    (18) clase -> . CLASS ID LLAVEIZQ LLAVEDER PUNTOCOMA clase
    (22) var -> . VAR varp
    (35) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo
    (36) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
    (37) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo
    (38) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion
    (39) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo
    (40) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
    (41) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo
    (42) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion

    MAIN            shift and go to state 9
    CLASS           shift and go to state 10
    VAR             shift and go to state 11
    FUNC            shift and go to state 12

    main                           shift and go to state 5
    clase                          shift and go to state 6
    var                            shift and go to state 7
    funcion                        shift and go to state 8

state 5

    (1) programa -> PROGRAM ID PUNTOCOMA main .

    $end            reduce using rule 1 (programa -> PROGRAM ID PUNTOCOMA main .)


state 6

    (2) programa -> PROGRAM ID PUNTOCOMA clase . main
    (3) programa -> PROGRAM ID PUNTOCOMA clase . var main
    (4) programa -> PROGRAM ID PUNTOCOMA clase . var funcion main
    (5) programa -> PROGRAM ID PUNTOCOMA clase . funcion main
    (9) main -> . MAIN PARENTESISIZQ PARENTESISDER LLAVEIZQ LLAVEDER
    (10) main -> . MAIN PARENTESISIZQ PARENTESISDER LLAVEIZQ estatuto LLAVEDER
    (22) var -> . VAR varp
    (35) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo
    (36) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
    (37) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo
    (38) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion
    (39) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo
    (40) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
    (41) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo
    (42) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion

    MAIN            shift and go to state 9
    VAR             shift and go to state 11
    FUNC            shift and go to state 12

    main                           shift and go to state 13
    var                            shift and go to state 14
    funcion                        shift and go to state 15

state 7

    (6) programa -> PROGRAM ID PUNTOCOMA var . main
    (7) programa -> PROGRAM ID PUNTOCOMA var . funcion main
    (9) main -> . MAIN PARENTESISIZQ PARENTESISDER LLAVEIZQ LLAVEDER
    (10) main -> . MAIN PARENTESISIZQ PARENTESISDER LLAVEIZQ estatuto LLAVEDER
    (35) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo
    (36) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
    (37) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo
    (38) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion
    (39) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo
    (40) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
    (41) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo
    (42) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion

    MAIN            shift and go to state 9
    FUNC            shift and go to state 12

    main                           shift and go to state 16
    funcion                        shift and go to state 17

state 8

    (8) programa -> PROGRAM ID PUNTOCOMA funcion . main
    (9) main -> . MAIN PARENTESISIZQ PARENTESISDER LLAVEIZQ LLAVEDER
    (10) main -> . MAIN PARENTESISIZQ PARENTESISDER LLAVEIZQ estatuto LLAVEDER

    MAIN            shift and go to state 9

    main                           shift and go to state 18

state 9

    (9) main -> MAIN . PARENTESISIZQ PARENTESISDER LLAVEIZQ LLAVEDER
    (10) main -> MAIN . PARENTESISIZQ PARENTESISDER LLAVEIZQ estatuto LLAVEDER

    PARENTESISIZQ   shift and go to state 19


state 10

    (11) clase -> CLASS . ID DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA
    (12) clase -> CLASS . ID DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA clase
    (13) clase -> CLASS . ID DOSPUNTOS tipo_clase ID LLAVEIZQ LLAVEDER PUNTOCOMA
    (14) clase -> CLASS . ID DOSPUNTOS tipo_clase ID LLAVEIZQ LLAVEDER PUNTOCOMA clase
    (15) clase -> CLASS . ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA
    (16) clase -> CLASS . ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA clase
    (17) clase -> CLASS . ID LLAVEIZQ LLAVEDER PUNTOCOMA
    (18) clase -> CLASS . ID LLAVEIZQ LLAVEDER PUNTOCOMA clase

    ID              shift and go to state 20


state 11

    (22) var -> VAR . varp
    (23) varp -> . tipo_compuesto ID PUNTOCOMA
    (24) varp -> . tipo_compuesto ID PUNTOCOMA varp
    (25) varp -> . tipo_simple ID PUNTOCOMA
    (26) varp -> . tipo_simple ID PUNTOCOMA varp
    (27) varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
    (28) varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA varp
    (29) varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
    (30) varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA varp
    (34) tipo_compuesto -> . ID
    (31) tipo_simple -> . INT
    (32) tipo_simple -> . FLOAT
    (33) tipo_simple -> . CHAR

    ID              shift and go to state 23
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27

    varp                           shift and go to state 21
    tipo_compuesto                 shift and go to state 22
    tipo_simple                    shift and go to state 24

state 12

    (35) funcion -> FUNC . tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo
    (36) funcion -> FUNC . tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
    (37) funcion -> FUNC . tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo
    (38) funcion -> FUNC . tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion
    (39) funcion -> FUNC . VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo
    (40) funcion -> FUNC . VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
    (41) funcion -> FUNC . VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo
    (42) funcion -> FUNC . VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion
    (31) tipo_simple -> . INT
    (32) tipo_simple -> . FLOAT
    (33) tipo_simple -> . CHAR

    VOID            shift and go to state 29
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27

    tipo_simple                    shift and go to state 28

state 13

    (2) programa -> PROGRAM ID PUNTOCOMA clase main .

    $end            reduce using rule 2 (programa -> PROGRAM ID PUNTOCOMA clase main .)


state 14

    (3) programa -> PROGRAM ID PUNTOCOMA clase var . main
    (4) programa -> PROGRAM ID PUNTOCOMA clase var . funcion main
    (9) main -> . MAIN PARENTESISIZQ PARENTESISDER LLAVEIZQ LLAVEDER
    (10) main -> . MAIN PARENTESISIZQ PARENTESISDER LLAVEIZQ estatuto LLAVEDER
    (35) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo
    (36) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
    (37) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo
    (38) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion
    (39) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo
    (40) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
    (41) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo
    (42) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion

    MAIN            shift and go to state 9
    FUNC            shift and go to state 12

    main                           shift and go to state 30
    funcion                        shift and go to state 31

state 15

    (5) programa -> PROGRAM ID PUNTOCOMA clase funcion . main
    (9) main -> . MAIN PARENTESISIZQ PARENTESISDER LLAVEIZQ LLAVEDER
    (10) main -> . MAIN PARENTESISIZQ PARENTESISDER LLAVEIZQ estatuto LLAVEDER

    MAIN            shift and go to state 9

    main                           shift and go to state 32

state 16

    (6) programa -> PROGRAM ID PUNTOCOMA var main .

    $end            reduce using rule 6 (programa -> PROGRAM ID PUNTOCOMA var main .)


state 17

    (7) programa -> PROGRAM ID PUNTOCOMA var funcion . main
    (9) main -> . MAIN PARENTESISIZQ PARENTESISDER LLAVEIZQ LLAVEDER
    (10) main -> . MAIN PARENTESISIZQ PARENTESISDER LLAVEIZQ estatuto LLAVEDER

    MAIN            shift and go to state 9

    main                           shift and go to state 33

state 18

    (8) programa -> PROGRAM ID PUNTOCOMA funcion main .

    $end            reduce using rule 8 (programa -> PROGRAM ID PUNTOCOMA funcion main .)


state 19

    (9) main -> MAIN PARENTESISIZQ . PARENTESISDER LLAVEIZQ LLAVEDER
    (10) main -> MAIN PARENTESISIZQ . PARENTESISDER LLAVEIZQ estatuto LLAVEDER

    PARENTESISDER   shift and go to state 34


state 20

    (11) clase -> CLASS ID . DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA
    (12) clase -> CLASS ID . DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA clase
    (13) clase -> CLASS ID . DOSPUNTOS tipo_clase ID LLAVEIZQ LLAVEDER PUNTOCOMA
    (14) clase -> CLASS ID . DOSPUNTOS tipo_clase ID LLAVEIZQ LLAVEDER PUNTOCOMA clase
    (15) clase -> CLASS ID . LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA
    (16) clase -> CLASS ID . LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA clase
    (17) clase -> CLASS ID . LLAVEIZQ LLAVEDER PUNTOCOMA
    (18) clase -> CLASS ID . LLAVEIZQ LLAVEDER PUNTOCOMA clase

    DOSPUNTOS       shift and go to state 35
    LLAVEIZQ        shift and go to state 36


state 21

    (22) var -> VAR varp .

    MAIN            reduce using rule 22 (var -> VAR varp .)
    FUNC            reduce using rule 22 (var -> VAR varp .)


state 22

    (23) varp -> tipo_compuesto . ID PUNTOCOMA
    (24) varp -> tipo_compuesto . ID PUNTOCOMA varp

    ID              shift and go to state 37


state 23

    (34) tipo_compuesto -> ID .

    ID              reduce using rule 34 (tipo_compuesto -> ID .)


state 24

    (25) varp -> tipo_simple . ID PUNTOCOMA
    (26) varp -> tipo_simple . ID PUNTOCOMA varp
    (27) varp -> tipo_simple . ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
    (28) varp -> tipo_simple . ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA varp
    (29) varp -> tipo_simple . ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
    (30) varp -> tipo_simple . ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA varp

    ID              shift and go to state 38


state 25

    (31) tipo_simple -> INT .

    ID              reduce using rule 31 (tipo_simple -> INT .)


state 26

    (32) tipo_simple -> FLOAT .

    ID              reduce using rule 32 (tipo_simple -> FLOAT .)


state 27

    (33) tipo_simple -> CHAR .

    ID              reduce using rule 33 (tipo_simple -> CHAR .)


state 28

    (35) funcion -> FUNC tipo_simple . ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo
    (36) funcion -> FUNC tipo_simple . ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
    (37) funcion -> FUNC tipo_simple . ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo
    (38) funcion -> FUNC tipo_simple . ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion

    ID              shift and go to state 39


state 29

    (39) funcion -> FUNC VOID . ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo
    (40) funcion -> FUNC VOID . ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
    (41) funcion -> FUNC VOID . ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo
    (42) funcion -> FUNC VOID . ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion

    ID              shift and go to state 40


state 30

    (3) programa -> PROGRAM ID PUNTOCOMA clase var main .

    $end            reduce using rule 3 (programa -> PROGRAM ID PUNTOCOMA clase var main .)


state 31

    (4) programa -> PROGRAM ID PUNTOCOMA clase var funcion . main
    (9) main -> . MAIN PARENTESISIZQ PARENTESISDER LLAVEIZQ LLAVEDER
    (10) main -> . MAIN PARENTESISIZQ PARENTESISDER LLAVEIZQ estatuto LLAVEDER

    MAIN            shift and go to state 9

    main                           shift and go to state 41

state 32

    (5) programa -> PROGRAM ID PUNTOCOMA clase funcion main .

    $end            reduce using rule 5 (programa -> PROGRAM ID PUNTOCOMA clase funcion main .)


state 33

    (7) programa -> PROGRAM ID PUNTOCOMA var funcion main .

    $end            reduce using rule 7 (programa -> PROGRAM ID PUNTOCOMA var funcion main .)


state 34

    (9) main -> MAIN PARENTESISIZQ PARENTESISDER . LLAVEIZQ LLAVEDER
    (10) main -> MAIN PARENTESISIZQ PARENTESISDER . LLAVEIZQ estatuto LLAVEDER

    LLAVEIZQ        shift and go to state 42


state 35

    (11) clase -> CLASS ID DOSPUNTOS . tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA
    (12) clase -> CLASS ID DOSPUNTOS . tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA clase
    (13) clase -> CLASS ID DOSPUNTOS . tipo_clase ID LLAVEIZQ LLAVEDER PUNTOCOMA
    (14) clase -> CLASS ID DOSPUNTOS . tipo_clase ID LLAVEIZQ LLAVEDER PUNTOCOMA clase
    (19) tipo_clase -> . PUBLIC
    (20) tipo_clase -> . PROTECTED
    (21) tipo_clase -> . PRIVATE

    PUBLIC          shift and go to state 44
    PROTECTED       shift and go to state 45
    PRIVATE         shift and go to state 46

    tipo_clase                     shift and go to state 43

state 36

    (15) clase -> CLASS ID LLAVEIZQ . bloque_clase LLAVEDER PUNTOCOMA
    (16) clase -> CLASS ID LLAVEIZQ . bloque_clase LLAVEDER PUNTOCOMA clase
    (17) clase -> CLASS ID LLAVEIZQ . LLAVEDER PUNTOCOMA
    (18) clase -> CLASS ID LLAVEIZQ . LLAVEDER PUNTOCOMA clase
    (54) bloque_clase -> . ATTRIBUTE DOSPUNTOS atributo METHOD DOSPUNTOS metodo

    LLAVEDER        shift and go to state 48
    ATTRIBUTE       shift and go to state 49

    bloque_clase                   shift and go to state 47

state 37

    (23) varp -> tipo_compuesto ID . PUNTOCOMA
    (24) varp -> tipo_compuesto ID . PUNTOCOMA varp

    PUNTOCOMA       shift and go to state 50


state 38

    (25) varp -> tipo_simple ID . PUNTOCOMA
    (26) varp -> tipo_simple ID . PUNTOCOMA varp
    (27) varp -> tipo_simple ID . CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
    (28) varp -> tipo_simple ID . CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA varp
    (29) varp -> tipo_simple ID . CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
    (30) varp -> tipo_simple ID . CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA varp

    PUNTOCOMA       shift and go to state 51
    CORCHETEIZQ     shift and go to state 52


state 39

    (35) funcion -> FUNC tipo_simple ID . PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo
    (36) funcion -> FUNC tipo_simple ID . PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
    (37) funcion -> FUNC tipo_simple ID . PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo
    (38) funcion -> FUNC tipo_simple ID . PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion

    PARENTESISIZQ   shift and go to state 53


state 40

    (39) funcion -> FUNC VOID ID . PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo
    (40) funcion -> FUNC VOID ID . PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
    (41) funcion -> FUNC VOID ID . PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo
    (42) funcion -> FUNC VOID ID . PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion

    PARENTESISIZQ   shift and go to state 54


state 41

    (4) programa -> PROGRAM ID PUNTOCOMA clase var funcion main .

    $end            reduce using rule 4 (programa -> PROGRAM ID PUNTOCOMA clase var funcion main .)


state 42

    (9) main -> MAIN PARENTESISIZQ PARENTESISDER LLAVEIZQ . LLAVEDER
    (10) main -> MAIN PARENTESISIZQ PARENTESISDER LLAVEIZQ . estatuto LLAVEDER
    (61) estatuto -> . asignacion PUNTOCOMA
    (62) estatuto -> . asignacion PUNTOCOMA estatuto
    (63) estatuto -> . llamada PUNTOCOMA
    (64) estatuto -> . llamada PUNTOCOMA estatuto
    (65) estatuto -> . lee PUNTOCOMA
    (66) estatuto -> . lee PUNTOCOMA estatuto
    (67) estatuto -> . escribe PUNTOCOMA
    (68) estatuto -> . escribe PUNTOCOMA estatuto
    (69) estatuto -> . condicion
    (70) estatuto -> . condicion estatuto
    (71) estatuto -> . ciclo_w
    (72) estatuto -> . ciclo_w estatuto
    (73) estatuto -> . ciclo_f
    (74) estatuto -> . ciclo_f estatuto
    (75) asignacion -> . variable IGUAL exp
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER
    (79) lee -> . READ PARENTESISIZQ leep PARENTESISDER
    (85) escribe -> . WRITE PARENTESISIZQ escribep PARENTESISDER
    (90) condicion -> . IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER
    (91) condicion -> . IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER
    (92) ciclo_w -> . WHILE PARENTESISIZQ exp PARENTESISDER DO LLAVEIZQ estatuto LLAVEDER
    (93) ciclo_f -> . FROM variable IGUAL exp TO exp DO LLAVEIZQ estatuto LLAVEDER
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER

    LLAVEDER        shift and go to state 55
    ID              shift and go to state 65
    READ            shift and go to state 66
    WRITE           shift and go to state 67
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    FROM            shift and go to state 70

    estatuto                       shift and go to state 56
    asignacion                     shift and go to state 57
    llamada                        shift and go to state 58
    lee                            shift and go to state 59
    escribe                        shift and go to state 60
    condicion                      shift and go to state 61
    ciclo_w                        shift and go to state 62
    ciclo_f                        shift and go to state 63
    variable                       shift and go to state 64

state 43

    (11) clase -> CLASS ID DOSPUNTOS tipo_clase . ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA
    (12) clase -> CLASS ID DOSPUNTOS tipo_clase . ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA clase
    (13) clase -> CLASS ID DOSPUNTOS tipo_clase . ID LLAVEIZQ LLAVEDER PUNTOCOMA
    (14) clase -> CLASS ID DOSPUNTOS tipo_clase . ID LLAVEIZQ LLAVEDER PUNTOCOMA clase

    ID              shift and go to state 71


state 44

    (19) tipo_clase -> PUBLIC .

    ID              reduce using rule 19 (tipo_clase -> PUBLIC .)
    INT             reduce using rule 19 (tipo_clase -> PUBLIC .)
    FLOAT           reduce using rule 19 (tipo_clase -> PUBLIC .)
    CHAR            reduce using rule 19 (tipo_clase -> PUBLIC .)
    VOID            reduce using rule 19 (tipo_clase -> PUBLIC .)


state 45

    (20) tipo_clase -> PROTECTED .

    ID              reduce using rule 20 (tipo_clase -> PROTECTED .)
    INT             reduce using rule 20 (tipo_clase -> PROTECTED .)
    FLOAT           reduce using rule 20 (tipo_clase -> PROTECTED .)
    CHAR            reduce using rule 20 (tipo_clase -> PROTECTED .)
    VOID            reduce using rule 20 (tipo_clase -> PROTECTED .)


state 46

    (21) tipo_clase -> PRIVATE .

    ID              reduce using rule 21 (tipo_clase -> PRIVATE .)
    INT             reduce using rule 21 (tipo_clase -> PRIVATE .)
    FLOAT           reduce using rule 21 (tipo_clase -> PRIVATE .)
    CHAR            reduce using rule 21 (tipo_clase -> PRIVATE .)
    VOID            reduce using rule 21 (tipo_clase -> PRIVATE .)


state 47

    (15) clase -> CLASS ID LLAVEIZQ bloque_clase . LLAVEDER PUNTOCOMA
    (16) clase -> CLASS ID LLAVEIZQ bloque_clase . LLAVEDER PUNTOCOMA clase

    LLAVEDER        shift and go to state 72


state 48

    (17) clase -> CLASS ID LLAVEIZQ LLAVEDER . PUNTOCOMA
    (18) clase -> CLASS ID LLAVEIZQ LLAVEDER . PUNTOCOMA clase

    PUNTOCOMA       shift and go to state 73


state 49

    (54) bloque_clase -> ATTRIBUTE . DOSPUNTOS atributo METHOD DOSPUNTOS metodo

    DOSPUNTOS       shift and go to state 74


state 50

    (23) varp -> tipo_compuesto ID PUNTOCOMA .
    (24) varp -> tipo_compuesto ID PUNTOCOMA . varp
    (23) varp -> . tipo_compuesto ID PUNTOCOMA
    (24) varp -> . tipo_compuesto ID PUNTOCOMA varp
    (25) varp -> . tipo_simple ID PUNTOCOMA
    (26) varp -> . tipo_simple ID PUNTOCOMA varp
    (27) varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
    (28) varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA varp
    (29) varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
    (30) varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA varp
    (34) tipo_compuesto -> . ID
    (31) tipo_simple -> . INT
    (32) tipo_simple -> . FLOAT
    (33) tipo_simple -> . CHAR

    MAIN            reduce using rule 23 (varp -> tipo_compuesto ID PUNTOCOMA .)
    FUNC            reduce using rule 23 (varp -> tipo_compuesto ID PUNTOCOMA .)
    ID              shift and go to state 23
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27

    tipo_compuesto                 shift and go to state 22
    varp                           shift and go to state 75
    tipo_simple                    shift and go to state 24

state 51

    (25) varp -> tipo_simple ID PUNTOCOMA .
    (26) varp -> tipo_simple ID PUNTOCOMA . varp
    (23) varp -> . tipo_compuesto ID PUNTOCOMA
    (24) varp -> . tipo_compuesto ID PUNTOCOMA varp
    (25) varp -> . tipo_simple ID PUNTOCOMA
    (26) varp -> . tipo_simple ID PUNTOCOMA varp
    (27) varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
    (28) varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA varp
    (29) varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
    (30) varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA varp
    (34) tipo_compuesto -> . ID
    (31) tipo_simple -> . INT
    (32) tipo_simple -> . FLOAT
    (33) tipo_simple -> . CHAR

    MAIN            reduce using rule 25 (varp -> tipo_simple ID PUNTOCOMA .)
    FUNC            reduce using rule 25 (varp -> tipo_simple ID PUNTOCOMA .)
    ID              shift and go to state 23
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27

    tipo_simple                    shift and go to state 24
    varp                           shift and go to state 76
    tipo_compuesto                 shift and go to state 22

state 52

    (27) varp -> tipo_simple ID CORCHETEIZQ . CTEI CORCHETEDER PUNTOCOMA
    (28) varp -> tipo_simple ID CORCHETEIZQ . CTEI CORCHETEDER PUNTOCOMA varp
    (29) varp -> tipo_simple ID CORCHETEIZQ . CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
    (30) varp -> tipo_simple ID CORCHETEIZQ . CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA varp

    CTEI            shift and go to state 77


state 53

    (35) funcion -> FUNC tipo_simple ID PARENTESISIZQ . parametros PARENTESISDER PUNTOCOMA dec_var cuerpo
    (36) funcion -> FUNC tipo_simple ID PARENTESISIZQ . parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
    (37) funcion -> FUNC tipo_simple ID PARENTESISIZQ . parametros PARENTESISDER PUNTOCOMA cuerpo
    (38) funcion -> FUNC tipo_simple ID PARENTESISIZQ . parametros PARENTESISDER PUNTOCOMA cuerpo funcion
    (50) parametros -> . tipo_simple ID
    (51) parametros -> . tipo_simple ID COMA parametros
    (31) tipo_simple -> . INT
    (32) tipo_simple -> . FLOAT
    (33) tipo_simple -> . CHAR

    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27

    tipo_simple                    shift and go to state 78
    parametros                     shift and go to state 79

state 54

    (39) funcion -> FUNC VOID ID PARENTESISIZQ . parametros PARENTESISDER PUNTOCOMA dec_var cuerpo
    (40) funcion -> FUNC VOID ID PARENTESISIZQ . parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
    (41) funcion -> FUNC VOID ID PARENTESISIZQ . parametros PARENTESISDER PUNTOCOMA cuerpo
    (42) funcion -> FUNC VOID ID PARENTESISIZQ . parametros PARENTESISDER PUNTOCOMA cuerpo funcion
    (50) parametros -> . tipo_simple ID
    (51) parametros -> . tipo_simple ID COMA parametros
    (31) tipo_simple -> . INT
    (32) tipo_simple -> . FLOAT
    (33) tipo_simple -> . CHAR

    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27

    parametros                     shift and go to state 80
    tipo_simple                    shift and go to state 78

state 55

    (9) main -> MAIN PARENTESISIZQ PARENTESISDER LLAVEIZQ LLAVEDER .

    $end            reduce using rule 9 (main -> MAIN PARENTESISIZQ PARENTESISDER LLAVEIZQ LLAVEDER .)


state 56

    (10) main -> MAIN PARENTESISIZQ PARENTESISDER LLAVEIZQ estatuto . LLAVEDER

    LLAVEDER        shift and go to state 81


state 57

    (61) estatuto -> asignacion . PUNTOCOMA
    (62) estatuto -> asignacion . PUNTOCOMA estatuto

    PUNTOCOMA       shift and go to state 82


state 58

    (63) estatuto -> llamada . PUNTOCOMA
    (64) estatuto -> llamada . PUNTOCOMA estatuto

    PUNTOCOMA       shift and go to state 83


state 59

    (65) estatuto -> lee . PUNTOCOMA
    (66) estatuto -> lee . PUNTOCOMA estatuto

    PUNTOCOMA       shift and go to state 84


state 60

    (67) estatuto -> escribe . PUNTOCOMA
    (68) estatuto -> escribe . PUNTOCOMA estatuto

    PUNTOCOMA       shift and go to state 85


state 61

    (69) estatuto -> condicion .
    (70) estatuto -> condicion . estatuto
    (61) estatuto -> . asignacion PUNTOCOMA
    (62) estatuto -> . asignacion PUNTOCOMA estatuto
    (63) estatuto -> . llamada PUNTOCOMA
    (64) estatuto -> . llamada PUNTOCOMA estatuto
    (65) estatuto -> . lee PUNTOCOMA
    (66) estatuto -> . lee PUNTOCOMA estatuto
    (67) estatuto -> . escribe PUNTOCOMA
    (68) estatuto -> . escribe PUNTOCOMA estatuto
    (69) estatuto -> . condicion
    (70) estatuto -> . condicion estatuto
    (71) estatuto -> . ciclo_w
    (72) estatuto -> . ciclo_w estatuto
    (73) estatuto -> . ciclo_f
    (74) estatuto -> . ciclo_f estatuto
    (75) asignacion -> . variable IGUAL exp
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER
    (79) lee -> . READ PARENTESISIZQ leep PARENTESISDER
    (85) escribe -> . WRITE PARENTESISIZQ escribep PARENTESISDER
    (90) condicion -> . IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER
    (91) condicion -> . IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER
    (92) ciclo_w -> . WHILE PARENTESISIZQ exp PARENTESISDER DO LLAVEIZQ estatuto LLAVEDER
    (93) ciclo_f -> . FROM variable IGUAL exp TO exp DO LLAVEIZQ estatuto LLAVEDER
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER

    LLAVEDER        reduce using rule 69 (estatuto -> condicion .)
    RETURN          reduce using rule 69 (estatuto -> condicion .)
    ID              shift and go to state 65
    READ            shift and go to state 66
    WRITE           shift and go to state 67
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    FROM            shift and go to state 70

    condicion                      shift and go to state 61
    estatuto                       shift and go to state 86
    asignacion                     shift and go to state 57
    llamada                        shift and go to state 58
    lee                            shift and go to state 59
    escribe                        shift and go to state 60
    ciclo_w                        shift and go to state 62
    ciclo_f                        shift and go to state 63
    variable                       shift and go to state 64

state 62

    (71) estatuto -> ciclo_w .
    (72) estatuto -> ciclo_w . estatuto
    (61) estatuto -> . asignacion PUNTOCOMA
    (62) estatuto -> . asignacion PUNTOCOMA estatuto
    (63) estatuto -> . llamada PUNTOCOMA
    (64) estatuto -> . llamada PUNTOCOMA estatuto
    (65) estatuto -> . lee PUNTOCOMA
    (66) estatuto -> . lee PUNTOCOMA estatuto
    (67) estatuto -> . escribe PUNTOCOMA
    (68) estatuto -> . escribe PUNTOCOMA estatuto
    (69) estatuto -> . condicion
    (70) estatuto -> . condicion estatuto
    (71) estatuto -> . ciclo_w
    (72) estatuto -> . ciclo_w estatuto
    (73) estatuto -> . ciclo_f
    (74) estatuto -> . ciclo_f estatuto
    (75) asignacion -> . variable IGUAL exp
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER
    (79) lee -> . READ PARENTESISIZQ leep PARENTESISDER
    (85) escribe -> . WRITE PARENTESISIZQ escribep PARENTESISDER
    (90) condicion -> . IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER
    (91) condicion -> . IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER
    (92) ciclo_w -> . WHILE PARENTESISIZQ exp PARENTESISDER DO LLAVEIZQ estatuto LLAVEDER
    (93) ciclo_f -> . FROM variable IGUAL exp TO exp DO LLAVEIZQ estatuto LLAVEDER
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER

    LLAVEDER        reduce using rule 71 (estatuto -> ciclo_w .)
    RETURN          reduce using rule 71 (estatuto -> ciclo_w .)
    ID              shift and go to state 65
    READ            shift and go to state 66
    WRITE           shift and go to state 67
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    FROM            shift and go to state 70

    ciclo_w                        shift and go to state 62
    estatuto                       shift and go to state 87
    asignacion                     shift and go to state 57
    llamada                        shift and go to state 58
    lee                            shift and go to state 59
    escribe                        shift and go to state 60
    condicion                      shift and go to state 61
    ciclo_f                        shift and go to state 63
    variable                       shift and go to state 64

state 63

    (73) estatuto -> ciclo_f .
    (74) estatuto -> ciclo_f . estatuto
    (61) estatuto -> . asignacion PUNTOCOMA
    (62) estatuto -> . asignacion PUNTOCOMA estatuto
    (63) estatuto -> . llamada PUNTOCOMA
    (64) estatuto -> . llamada PUNTOCOMA estatuto
    (65) estatuto -> . lee PUNTOCOMA
    (66) estatuto -> . lee PUNTOCOMA estatuto
    (67) estatuto -> . escribe PUNTOCOMA
    (68) estatuto -> . escribe PUNTOCOMA estatuto
    (69) estatuto -> . condicion
    (70) estatuto -> . condicion estatuto
    (71) estatuto -> . ciclo_w
    (72) estatuto -> . ciclo_w estatuto
    (73) estatuto -> . ciclo_f
    (74) estatuto -> . ciclo_f estatuto
    (75) asignacion -> . variable IGUAL exp
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER
    (79) lee -> . READ PARENTESISIZQ leep PARENTESISDER
    (85) escribe -> . WRITE PARENTESISIZQ escribep PARENTESISDER
    (90) condicion -> . IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER
    (91) condicion -> . IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER
    (92) ciclo_w -> . WHILE PARENTESISIZQ exp PARENTESISDER DO LLAVEIZQ estatuto LLAVEDER
    (93) ciclo_f -> . FROM variable IGUAL exp TO exp DO LLAVEIZQ estatuto LLAVEDER
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER

    LLAVEDER        reduce using rule 73 (estatuto -> ciclo_f .)
    RETURN          reduce using rule 73 (estatuto -> ciclo_f .)
    ID              shift and go to state 65
    READ            shift and go to state 66
    WRITE           shift and go to state 67
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    FROM            shift and go to state 70

    ciclo_f                        shift and go to state 63
    estatuto                       shift and go to state 88
    asignacion                     shift and go to state 57
    llamada                        shift and go to state 58
    lee                            shift and go to state 59
    escribe                        shift and go to state 60
    condicion                      shift and go to state 61
    ciclo_w                        shift and go to state 62
    variable                       shift and go to state 64

state 64

    (75) asignacion -> variable . IGUAL exp

    IGUAL           shift and go to state 89


state 65

    (76) llamada -> ID . PARENTESISIZQ llamadap PARENTESISDER
    (82) variable -> ID .
    (83) variable -> ID . CORCHETEIZQ exp CORCHETEDER
    (84) variable -> ID . CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER

    PARENTESISIZQ   shift and go to state 90
    IGUAL           reduce using rule 82 (variable -> ID .)
    CORCHETEIZQ     shift and go to state 91


state 66

    (79) lee -> READ . PARENTESISIZQ leep PARENTESISDER

    PARENTESISIZQ   shift and go to state 92


state 67

    (85) escribe -> WRITE . PARENTESISIZQ escribep PARENTESISDER

    PARENTESISIZQ   shift and go to state 93


state 68

    (90) condicion -> IF . PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER
    (91) condicion -> IF . PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER

    PARENTESISIZQ   shift and go to state 94


state 69

    (92) ciclo_w -> WHILE . PARENTESISIZQ exp PARENTESISDER DO LLAVEIZQ estatuto LLAVEDER

    PARENTESISIZQ   shift and go to state 95


state 70

    (93) ciclo_f -> FROM . variable IGUAL exp TO exp DO LLAVEIZQ estatuto LLAVEDER
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER

    ID              shift and go to state 97

    variable                       shift and go to state 96

state 71

    (11) clase -> CLASS ID DOSPUNTOS tipo_clase ID . LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA
    (12) clase -> CLASS ID DOSPUNTOS tipo_clase ID . LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA clase
    (13) clase -> CLASS ID DOSPUNTOS tipo_clase ID . LLAVEIZQ LLAVEDER PUNTOCOMA
    (14) clase -> CLASS ID DOSPUNTOS tipo_clase ID . LLAVEIZQ LLAVEDER PUNTOCOMA clase

    LLAVEIZQ        shift and go to state 98


state 72

    (15) clase -> CLASS ID LLAVEIZQ bloque_clase LLAVEDER . PUNTOCOMA
    (16) clase -> CLASS ID LLAVEIZQ bloque_clase LLAVEDER . PUNTOCOMA clase

    PUNTOCOMA       shift and go to state 99


state 73

    (17) clase -> CLASS ID LLAVEIZQ LLAVEDER PUNTOCOMA .
    (18) clase -> CLASS ID LLAVEIZQ LLAVEDER PUNTOCOMA . clase
    (11) clase -> . CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA
    (12) clase -> . CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA clase
    (13) clase -> . CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ LLAVEDER PUNTOCOMA
    (14) clase -> . CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ LLAVEDER PUNTOCOMA clase
    (15) clase -> . CLASS ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA
    (16) clase -> . CLASS ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA clase
    (17) clase -> . CLASS ID LLAVEIZQ LLAVEDER PUNTOCOMA
    (18) clase -> . CLASS ID LLAVEIZQ LLAVEDER PUNTOCOMA clase

    MAIN            reduce using rule 17 (clase -> CLASS ID LLAVEIZQ LLAVEDER PUNTOCOMA .)
    VAR             reduce using rule 17 (clase -> CLASS ID LLAVEIZQ LLAVEDER PUNTOCOMA .)
    FUNC            reduce using rule 17 (clase -> CLASS ID LLAVEIZQ LLAVEDER PUNTOCOMA .)
    CLASS           shift and go to state 10

    clase                          shift and go to state 100

state 74

    (54) bloque_clase -> ATTRIBUTE DOSPUNTOS . atributo METHOD DOSPUNTOS metodo
    (55) atributo -> . tipo_clase tipo_simple ID PUNTOCOMA
    (56) atributo -> . tipo_clase tipo_simple ID PUNTOCOMA atributo
    (19) tipo_clase -> . PUBLIC
    (20) tipo_clase -> . PROTECTED
    (21) tipo_clase -> . PRIVATE

    PUBLIC          shift and go to state 44
    PROTECTED       shift and go to state 45
    PRIVATE         shift and go to state 46

    atributo                       shift and go to state 101
    tipo_clase                     shift and go to state 102

state 75

    (24) varp -> tipo_compuesto ID PUNTOCOMA varp .

    MAIN            reduce using rule 24 (varp -> tipo_compuesto ID PUNTOCOMA varp .)
    FUNC            reduce using rule 24 (varp -> tipo_compuesto ID PUNTOCOMA varp .)


state 76

    (26) varp -> tipo_simple ID PUNTOCOMA varp .

    MAIN            reduce using rule 26 (varp -> tipo_simple ID PUNTOCOMA varp .)
    FUNC            reduce using rule 26 (varp -> tipo_simple ID PUNTOCOMA varp .)


state 77

    (27) varp -> tipo_simple ID CORCHETEIZQ CTEI . CORCHETEDER PUNTOCOMA
    (28) varp -> tipo_simple ID CORCHETEIZQ CTEI . CORCHETEDER PUNTOCOMA varp
    (29) varp -> tipo_simple ID CORCHETEIZQ CTEI . CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
    (30) varp -> tipo_simple ID CORCHETEIZQ CTEI . CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA varp

    CORCHETEDER     shift and go to state 103


state 78

    (50) parametros -> tipo_simple . ID
    (51) parametros -> tipo_simple . ID COMA parametros

    ID              shift and go to state 104


state 79

    (35) funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros . PARENTESISDER PUNTOCOMA dec_var cuerpo
    (36) funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros . PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
    (37) funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros . PARENTESISDER PUNTOCOMA cuerpo
    (38) funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros . PARENTESISDER PUNTOCOMA cuerpo funcion

    PARENTESISDER   shift and go to state 105


state 80

    (39) funcion -> FUNC VOID ID PARENTESISIZQ parametros . PARENTESISDER PUNTOCOMA dec_var cuerpo
    (40) funcion -> FUNC VOID ID PARENTESISIZQ parametros . PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
    (41) funcion -> FUNC VOID ID PARENTESISIZQ parametros . PARENTESISDER PUNTOCOMA cuerpo
    (42) funcion -> FUNC VOID ID PARENTESISIZQ parametros . PARENTESISDER PUNTOCOMA cuerpo funcion

    PARENTESISDER   shift and go to state 106


state 81

    (10) main -> MAIN PARENTESISIZQ PARENTESISDER LLAVEIZQ estatuto LLAVEDER .

    $end            reduce using rule 10 (main -> MAIN PARENTESISIZQ PARENTESISDER LLAVEIZQ estatuto LLAVEDER .)


state 82

    (61) estatuto -> asignacion PUNTOCOMA .
    (62) estatuto -> asignacion PUNTOCOMA . estatuto
    (61) estatuto -> . asignacion PUNTOCOMA
    (62) estatuto -> . asignacion PUNTOCOMA estatuto
    (63) estatuto -> . llamada PUNTOCOMA
    (64) estatuto -> . llamada PUNTOCOMA estatuto
    (65) estatuto -> . lee PUNTOCOMA
    (66) estatuto -> . lee PUNTOCOMA estatuto
    (67) estatuto -> . escribe PUNTOCOMA
    (68) estatuto -> . escribe PUNTOCOMA estatuto
    (69) estatuto -> . condicion
    (70) estatuto -> . condicion estatuto
    (71) estatuto -> . ciclo_w
    (72) estatuto -> . ciclo_w estatuto
    (73) estatuto -> . ciclo_f
    (74) estatuto -> . ciclo_f estatuto
    (75) asignacion -> . variable IGUAL exp
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER
    (79) lee -> . READ PARENTESISIZQ leep PARENTESISDER
    (85) escribe -> . WRITE PARENTESISIZQ escribep PARENTESISDER
    (90) condicion -> . IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER
    (91) condicion -> . IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER
    (92) ciclo_w -> . WHILE PARENTESISIZQ exp PARENTESISDER DO LLAVEIZQ estatuto LLAVEDER
    (93) ciclo_f -> . FROM variable IGUAL exp TO exp DO LLAVEIZQ estatuto LLAVEDER
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER

    LLAVEDER        reduce using rule 61 (estatuto -> asignacion PUNTOCOMA .)
    RETURN          reduce using rule 61 (estatuto -> asignacion PUNTOCOMA .)
    ID              shift and go to state 65
    READ            shift and go to state 66
    WRITE           shift and go to state 67
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    FROM            shift and go to state 70

    asignacion                     shift and go to state 57
    estatuto                       shift and go to state 107
    llamada                        shift and go to state 58
    lee                            shift and go to state 59
    escribe                        shift and go to state 60
    condicion                      shift and go to state 61
    ciclo_w                        shift and go to state 62
    ciclo_f                        shift and go to state 63
    variable                       shift and go to state 64

state 83

    (63) estatuto -> llamada PUNTOCOMA .
    (64) estatuto -> llamada PUNTOCOMA . estatuto
    (61) estatuto -> . asignacion PUNTOCOMA
    (62) estatuto -> . asignacion PUNTOCOMA estatuto
    (63) estatuto -> . llamada PUNTOCOMA
    (64) estatuto -> . llamada PUNTOCOMA estatuto
    (65) estatuto -> . lee PUNTOCOMA
    (66) estatuto -> . lee PUNTOCOMA estatuto
    (67) estatuto -> . escribe PUNTOCOMA
    (68) estatuto -> . escribe PUNTOCOMA estatuto
    (69) estatuto -> . condicion
    (70) estatuto -> . condicion estatuto
    (71) estatuto -> . ciclo_w
    (72) estatuto -> . ciclo_w estatuto
    (73) estatuto -> . ciclo_f
    (74) estatuto -> . ciclo_f estatuto
    (75) asignacion -> . variable IGUAL exp
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER
    (79) lee -> . READ PARENTESISIZQ leep PARENTESISDER
    (85) escribe -> . WRITE PARENTESISIZQ escribep PARENTESISDER
    (90) condicion -> . IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER
    (91) condicion -> . IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER
    (92) ciclo_w -> . WHILE PARENTESISIZQ exp PARENTESISDER DO LLAVEIZQ estatuto LLAVEDER
    (93) ciclo_f -> . FROM variable IGUAL exp TO exp DO LLAVEIZQ estatuto LLAVEDER
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER

    LLAVEDER        reduce using rule 63 (estatuto -> llamada PUNTOCOMA .)
    RETURN          reduce using rule 63 (estatuto -> llamada PUNTOCOMA .)
    ID              shift and go to state 65
    READ            shift and go to state 66
    WRITE           shift and go to state 67
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    FROM            shift and go to state 70

    llamada                        shift and go to state 58
    estatuto                       shift and go to state 108
    asignacion                     shift and go to state 57
    lee                            shift and go to state 59
    escribe                        shift and go to state 60
    condicion                      shift and go to state 61
    ciclo_w                        shift and go to state 62
    ciclo_f                        shift and go to state 63
    variable                       shift and go to state 64

state 84

    (65) estatuto -> lee PUNTOCOMA .
    (66) estatuto -> lee PUNTOCOMA . estatuto
    (61) estatuto -> . asignacion PUNTOCOMA
    (62) estatuto -> . asignacion PUNTOCOMA estatuto
    (63) estatuto -> . llamada PUNTOCOMA
    (64) estatuto -> . llamada PUNTOCOMA estatuto
    (65) estatuto -> . lee PUNTOCOMA
    (66) estatuto -> . lee PUNTOCOMA estatuto
    (67) estatuto -> . escribe PUNTOCOMA
    (68) estatuto -> . escribe PUNTOCOMA estatuto
    (69) estatuto -> . condicion
    (70) estatuto -> . condicion estatuto
    (71) estatuto -> . ciclo_w
    (72) estatuto -> . ciclo_w estatuto
    (73) estatuto -> . ciclo_f
    (74) estatuto -> . ciclo_f estatuto
    (75) asignacion -> . variable IGUAL exp
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER
    (79) lee -> . READ PARENTESISIZQ leep PARENTESISDER
    (85) escribe -> . WRITE PARENTESISIZQ escribep PARENTESISDER
    (90) condicion -> . IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER
    (91) condicion -> . IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER
    (92) ciclo_w -> . WHILE PARENTESISIZQ exp PARENTESISDER DO LLAVEIZQ estatuto LLAVEDER
    (93) ciclo_f -> . FROM variable IGUAL exp TO exp DO LLAVEIZQ estatuto LLAVEDER
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER

    LLAVEDER        reduce using rule 65 (estatuto -> lee PUNTOCOMA .)
    RETURN          reduce using rule 65 (estatuto -> lee PUNTOCOMA .)
    ID              shift and go to state 65
    READ            shift and go to state 66
    WRITE           shift and go to state 67
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    FROM            shift and go to state 70

    lee                            shift and go to state 59
    estatuto                       shift and go to state 109
    asignacion                     shift and go to state 57
    llamada                        shift and go to state 58
    escribe                        shift and go to state 60
    condicion                      shift and go to state 61
    ciclo_w                        shift and go to state 62
    ciclo_f                        shift and go to state 63
    variable                       shift and go to state 64

state 85

    (67) estatuto -> escribe PUNTOCOMA .
    (68) estatuto -> escribe PUNTOCOMA . estatuto
    (61) estatuto -> . asignacion PUNTOCOMA
    (62) estatuto -> . asignacion PUNTOCOMA estatuto
    (63) estatuto -> . llamada PUNTOCOMA
    (64) estatuto -> . llamada PUNTOCOMA estatuto
    (65) estatuto -> . lee PUNTOCOMA
    (66) estatuto -> . lee PUNTOCOMA estatuto
    (67) estatuto -> . escribe PUNTOCOMA
    (68) estatuto -> . escribe PUNTOCOMA estatuto
    (69) estatuto -> . condicion
    (70) estatuto -> . condicion estatuto
    (71) estatuto -> . ciclo_w
    (72) estatuto -> . ciclo_w estatuto
    (73) estatuto -> . ciclo_f
    (74) estatuto -> . ciclo_f estatuto
    (75) asignacion -> . variable IGUAL exp
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER
    (79) lee -> . READ PARENTESISIZQ leep PARENTESISDER
    (85) escribe -> . WRITE PARENTESISIZQ escribep PARENTESISDER
    (90) condicion -> . IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER
    (91) condicion -> . IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER
    (92) ciclo_w -> . WHILE PARENTESISIZQ exp PARENTESISDER DO LLAVEIZQ estatuto LLAVEDER
    (93) ciclo_f -> . FROM variable IGUAL exp TO exp DO LLAVEIZQ estatuto LLAVEDER
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER

    LLAVEDER        reduce using rule 67 (estatuto -> escribe PUNTOCOMA .)
    RETURN          reduce using rule 67 (estatuto -> escribe PUNTOCOMA .)
    ID              shift and go to state 65
    READ            shift and go to state 66
    WRITE           shift and go to state 67
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    FROM            shift and go to state 70

    escribe                        shift and go to state 60
    estatuto                       shift and go to state 110
    asignacion                     shift and go to state 57
    llamada                        shift and go to state 58
    lee                            shift and go to state 59
    condicion                      shift and go to state 61
    ciclo_w                        shift and go to state 62
    ciclo_f                        shift and go to state 63
    variable                       shift and go to state 64

state 86

    (70) estatuto -> condicion estatuto .

    LLAVEDER        reduce using rule 70 (estatuto -> condicion estatuto .)
    RETURN          reduce using rule 70 (estatuto -> condicion estatuto .)


state 87

    (72) estatuto -> ciclo_w estatuto .

    LLAVEDER        reduce using rule 72 (estatuto -> ciclo_w estatuto .)
    RETURN          reduce using rule 72 (estatuto -> ciclo_w estatuto .)


state 88

    (74) estatuto -> ciclo_f estatuto .

    LLAVEDER        reduce using rule 74 (estatuto -> ciclo_f estatuto .)
    RETURN          reduce using rule 74 (estatuto -> ciclo_f estatuto .)


state 89

    (75) asignacion -> variable IGUAL . exp
    (94) exp -> . t_exp
    (95) exp -> . t_exp OR exp
    (96) t_exp -> . g_exp
    (97) t_exp -> . g_exp AND t_exp
    (98) g_exp -> . m_exp
    (99) g_exp -> . m_exp EQUAL m_exp
    (100) g_exp -> . m_exp NOT m_exp
    (101) g_exp -> . m_exp GREATERTHAN m_exp
    (102) g_exp -> . m_exp LESSTHAN m_exp
    (103) m_exp -> . t
    (104) m_exp -> . t MAS m_exp
    (105) m_exp -> . t MENOS m_exp
    (106) t -> . f
    (107) t -> . f POR t
    (108) t -> . f DIV t
    (109) f -> . PARENTESISIZQ exp PARENTESISDER
    (110) f -> . CTEI
    (111) f -> . CTEF
    (112) f -> . CTECH
    (113) f -> . variable
    (114) f -> . llamada
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER

    PARENTESISIZQ   shift and go to state 118
    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTECH           shift and go to state 121
    ID              shift and go to state 123

    variable                       shift and go to state 111
    exp                            shift and go to state 112
    t_exp                          shift and go to state 113
    g_exp                          shift and go to state 114
    m_exp                          shift and go to state 115
    t                              shift and go to state 116
    f                              shift and go to state 117
    llamada                        shift and go to state 122

state 90

    (76) llamada -> ID PARENTESISIZQ . llamadap PARENTESISDER
    (77) llamadap -> . exp
    (78) llamadap -> . exp COMA llamadap
    (94) exp -> . t_exp
    (95) exp -> . t_exp OR exp
    (96) t_exp -> . g_exp
    (97) t_exp -> . g_exp AND t_exp
    (98) g_exp -> . m_exp
    (99) g_exp -> . m_exp EQUAL m_exp
    (100) g_exp -> . m_exp NOT m_exp
    (101) g_exp -> . m_exp GREATERTHAN m_exp
    (102) g_exp -> . m_exp LESSTHAN m_exp
    (103) m_exp -> . t
    (104) m_exp -> . t MAS m_exp
    (105) m_exp -> . t MENOS m_exp
    (106) t -> . f
    (107) t -> . f POR t
    (108) t -> . f DIV t
    (109) f -> . PARENTESISIZQ exp PARENTESISDER
    (110) f -> . CTEI
    (111) f -> . CTEF
    (112) f -> . CTECH
    (113) f -> . variable
    (114) f -> . llamada
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER

    PARENTESISIZQ   shift and go to state 118
    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTECH           shift and go to state 121
    ID              shift and go to state 123

    llamadap                       shift and go to state 124
    exp                            shift and go to state 125
    t_exp                          shift and go to state 113
    g_exp                          shift and go to state 114
    m_exp                          shift and go to state 115
    t                              shift and go to state 116
    f                              shift and go to state 117
    variable                       shift and go to state 111
    llamada                        shift and go to state 122

state 91

    (83) variable -> ID CORCHETEIZQ . exp CORCHETEDER
    (84) variable -> ID CORCHETEIZQ . exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER
    (94) exp -> . t_exp
    (95) exp -> . t_exp OR exp
    (96) t_exp -> . g_exp
    (97) t_exp -> . g_exp AND t_exp
    (98) g_exp -> . m_exp
    (99) g_exp -> . m_exp EQUAL m_exp
    (100) g_exp -> . m_exp NOT m_exp
    (101) g_exp -> . m_exp GREATERTHAN m_exp
    (102) g_exp -> . m_exp LESSTHAN m_exp
    (103) m_exp -> . t
    (104) m_exp -> . t MAS m_exp
    (105) m_exp -> . t MENOS m_exp
    (106) t -> . f
    (107) t -> . f POR t
    (108) t -> . f DIV t
    (109) f -> . PARENTESISIZQ exp PARENTESISDER
    (110) f -> . CTEI
    (111) f -> . CTEF
    (112) f -> . CTECH
    (113) f -> . variable
    (114) f -> . llamada
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER

    PARENTESISIZQ   shift and go to state 118
    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTECH           shift and go to state 121
    ID              shift and go to state 123

    exp                            shift and go to state 126
    t_exp                          shift and go to state 113
    g_exp                          shift and go to state 114
    m_exp                          shift and go to state 115
    t                              shift and go to state 116
    f                              shift and go to state 117
    variable                       shift and go to state 111
    llamada                        shift and go to state 122

state 92

    (79) lee -> READ PARENTESISIZQ . leep PARENTESISDER
    (80) leep -> . variable
    (81) leep -> . variable COMA leep
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER

    ID              shift and go to state 97

    leep                           shift and go to state 127
    variable                       shift and go to state 128

state 93

    (85) escribe -> WRITE PARENTESISIZQ . escribep PARENTESISDER
    (86) escribep -> . exp
    (87) escribep -> . exp COMA escribep
    (88) escribep -> . LETRERO
    (89) escribep -> . LETRERO COMA escribep
    (94) exp -> . t_exp
    (95) exp -> . t_exp OR exp
    (96) t_exp -> . g_exp
    (97) t_exp -> . g_exp AND t_exp
    (98) g_exp -> . m_exp
    (99) g_exp -> . m_exp EQUAL m_exp
    (100) g_exp -> . m_exp NOT m_exp
    (101) g_exp -> . m_exp GREATERTHAN m_exp
    (102) g_exp -> . m_exp LESSTHAN m_exp
    (103) m_exp -> . t
    (104) m_exp -> . t MAS m_exp
    (105) m_exp -> . t MENOS m_exp
    (106) t -> . f
    (107) t -> . f POR t
    (108) t -> . f DIV t
    (109) f -> . PARENTESISIZQ exp PARENTESISDER
    (110) f -> . CTEI
    (111) f -> . CTEF
    (112) f -> . CTECH
    (113) f -> . variable
    (114) f -> . llamada
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER

    LETRERO         shift and go to state 131
    PARENTESISIZQ   shift and go to state 118
    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTECH           shift and go to state 121
    ID              shift and go to state 123

    escribep                       shift and go to state 129
    exp                            shift and go to state 130
    t_exp                          shift and go to state 113
    g_exp                          shift and go to state 114
    m_exp                          shift and go to state 115
    t                              shift and go to state 116
    f                              shift and go to state 117
    variable                       shift and go to state 111
    llamada                        shift and go to state 122

state 94

    (90) condicion -> IF PARENTESISIZQ . exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER
    (91) condicion -> IF PARENTESISIZQ . exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER
    (94) exp -> . t_exp
    (95) exp -> . t_exp OR exp
    (96) t_exp -> . g_exp
    (97) t_exp -> . g_exp AND t_exp
    (98) g_exp -> . m_exp
    (99) g_exp -> . m_exp EQUAL m_exp
    (100) g_exp -> . m_exp NOT m_exp
    (101) g_exp -> . m_exp GREATERTHAN m_exp
    (102) g_exp -> . m_exp LESSTHAN m_exp
    (103) m_exp -> . t
    (104) m_exp -> . t MAS m_exp
    (105) m_exp -> . t MENOS m_exp
    (106) t -> . f
    (107) t -> . f POR t
    (108) t -> . f DIV t
    (109) f -> . PARENTESISIZQ exp PARENTESISDER
    (110) f -> . CTEI
    (111) f -> . CTEF
    (112) f -> . CTECH
    (113) f -> . variable
    (114) f -> . llamada
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER

    PARENTESISIZQ   shift and go to state 118
    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTECH           shift and go to state 121
    ID              shift and go to state 123

    exp                            shift and go to state 132
    t_exp                          shift and go to state 113
    g_exp                          shift and go to state 114
    m_exp                          shift and go to state 115
    t                              shift and go to state 116
    f                              shift and go to state 117
    variable                       shift and go to state 111
    llamada                        shift and go to state 122

state 95

    (92) ciclo_w -> WHILE PARENTESISIZQ . exp PARENTESISDER DO LLAVEIZQ estatuto LLAVEDER
    (94) exp -> . t_exp
    (95) exp -> . t_exp OR exp
    (96) t_exp -> . g_exp
    (97) t_exp -> . g_exp AND t_exp
    (98) g_exp -> . m_exp
    (99) g_exp -> . m_exp EQUAL m_exp
    (100) g_exp -> . m_exp NOT m_exp
    (101) g_exp -> . m_exp GREATERTHAN m_exp
    (102) g_exp -> . m_exp LESSTHAN m_exp
    (103) m_exp -> . t
    (104) m_exp -> . t MAS m_exp
    (105) m_exp -> . t MENOS m_exp
    (106) t -> . f
    (107) t -> . f POR t
    (108) t -> . f DIV t
    (109) f -> . PARENTESISIZQ exp PARENTESISDER
    (110) f -> . CTEI
    (111) f -> . CTEF
    (112) f -> . CTECH
    (113) f -> . variable
    (114) f -> . llamada
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER

    PARENTESISIZQ   shift and go to state 118
    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTECH           shift and go to state 121
    ID              shift and go to state 123

    exp                            shift and go to state 133
    t_exp                          shift and go to state 113
    g_exp                          shift and go to state 114
    m_exp                          shift and go to state 115
    t                              shift and go to state 116
    f                              shift and go to state 117
    variable                       shift and go to state 111
    llamada                        shift and go to state 122

state 96

    (93) ciclo_f -> FROM variable . IGUAL exp TO exp DO LLAVEIZQ estatuto LLAVEDER

    IGUAL           shift and go to state 134


state 97

    (82) variable -> ID .
    (83) variable -> ID . CORCHETEIZQ exp CORCHETEDER
    (84) variable -> ID . CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER

    IGUAL           reduce using rule 82 (variable -> ID .)
    COMA            reduce using rule 82 (variable -> ID .)
    PARENTESISDER   reduce using rule 82 (variable -> ID .)
    CORCHETEIZQ     shift and go to state 91


state 98

    (11) clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ . bloque_clase LLAVEDER PUNTOCOMA
    (12) clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ . bloque_clase LLAVEDER PUNTOCOMA clase
    (13) clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ . LLAVEDER PUNTOCOMA
    (14) clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ . LLAVEDER PUNTOCOMA clase
    (54) bloque_clase -> . ATTRIBUTE DOSPUNTOS atributo METHOD DOSPUNTOS metodo

    LLAVEDER        shift and go to state 136
    ATTRIBUTE       shift and go to state 49

    bloque_clase                   shift and go to state 135

state 99

    (15) clase -> CLASS ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA .
    (16) clase -> CLASS ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA . clase
    (11) clase -> . CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA
    (12) clase -> . CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA clase
    (13) clase -> . CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ LLAVEDER PUNTOCOMA
    (14) clase -> . CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ LLAVEDER PUNTOCOMA clase
    (15) clase -> . CLASS ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA
    (16) clase -> . CLASS ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA clase
    (17) clase -> . CLASS ID LLAVEIZQ LLAVEDER PUNTOCOMA
    (18) clase -> . CLASS ID LLAVEIZQ LLAVEDER PUNTOCOMA clase

    MAIN            reduce using rule 15 (clase -> CLASS ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA .)
    VAR             reduce using rule 15 (clase -> CLASS ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA .)
    FUNC            reduce using rule 15 (clase -> CLASS ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA .)
    CLASS           shift and go to state 10

    clase                          shift and go to state 137

state 100

    (18) clase -> CLASS ID LLAVEIZQ LLAVEDER PUNTOCOMA clase .

    MAIN            reduce using rule 18 (clase -> CLASS ID LLAVEIZQ LLAVEDER PUNTOCOMA clase .)
    VAR             reduce using rule 18 (clase -> CLASS ID LLAVEIZQ LLAVEDER PUNTOCOMA clase .)
    FUNC            reduce using rule 18 (clase -> CLASS ID LLAVEIZQ LLAVEDER PUNTOCOMA clase .)


state 101

    (54) bloque_clase -> ATTRIBUTE DOSPUNTOS atributo . METHOD DOSPUNTOS metodo

    METHOD          shift and go to state 138


state 102

    (55) atributo -> tipo_clase . tipo_simple ID PUNTOCOMA
    (56) atributo -> tipo_clase . tipo_simple ID PUNTOCOMA atributo
    (31) tipo_simple -> . INT
    (32) tipo_simple -> . FLOAT
    (33) tipo_simple -> . CHAR

    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27

    tipo_simple                    shift and go to state 139

state 103

    (27) varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER . PUNTOCOMA
    (28) varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER . PUNTOCOMA varp
    (29) varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER . CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
    (30) varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER . CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA varp

    PUNTOCOMA       shift and go to state 141
    CORCHETEIZQ     shift and go to state 140


state 104

    (50) parametros -> tipo_simple ID .
    (51) parametros -> tipo_simple ID . COMA parametros

    PARENTESISDER   reduce using rule 50 (parametros -> tipo_simple ID .)
    COMA            shift and go to state 142


state 105

    (35) funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER . PUNTOCOMA dec_var cuerpo
    (36) funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER . PUNTOCOMA dec_var cuerpo funcion
    (37) funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER . PUNTOCOMA cuerpo
    (38) funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER . PUNTOCOMA cuerpo funcion

    PUNTOCOMA       shift and go to state 143


state 106

    (39) funcion -> FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER . PUNTOCOMA dec_var cuerpo
    (40) funcion -> FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER . PUNTOCOMA dec_var cuerpo funcion
    (41) funcion -> FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER . PUNTOCOMA cuerpo
    (42) funcion -> FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER . PUNTOCOMA cuerpo funcion

    PUNTOCOMA       shift and go to state 144


state 107

    (62) estatuto -> asignacion PUNTOCOMA estatuto .

    LLAVEDER        reduce using rule 62 (estatuto -> asignacion PUNTOCOMA estatuto .)
    RETURN          reduce using rule 62 (estatuto -> asignacion PUNTOCOMA estatuto .)


state 108

    (64) estatuto -> llamada PUNTOCOMA estatuto .

    LLAVEDER        reduce using rule 64 (estatuto -> llamada PUNTOCOMA estatuto .)
    RETURN          reduce using rule 64 (estatuto -> llamada PUNTOCOMA estatuto .)


state 109

    (66) estatuto -> lee PUNTOCOMA estatuto .

    LLAVEDER        reduce using rule 66 (estatuto -> lee PUNTOCOMA estatuto .)
    RETURN          reduce using rule 66 (estatuto -> lee PUNTOCOMA estatuto .)


state 110

    (68) estatuto -> escribe PUNTOCOMA estatuto .

    LLAVEDER        reduce using rule 68 (estatuto -> escribe PUNTOCOMA estatuto .)
    RETURN          reduce using rule 68 (estatuto -> escribe PUNTOCOMA estatuto .)


state 111

    (113) f -> variable .

    POR             reduce using rule 113 (f -> variable .)
    DIV             reduce using rule 113 (f -> variable .)
    MAS             reduce using rule 113 (f -> variable .)
    MENOS           reduce using rule 113 (f -> variable .)
    EQUAL           reduce using rule 113 (f -> variable .)
    NOT             reduce using rule 113 (f -> variable .)
    GREATERTHAN     reduce using rule 113 (f -> variable .)
    LESSTHAN        reduce using rule 113 (f -> variable .)
    AND             reduce using rule 113 (f -> variable .)
    OR              reduce using rule 113 (f -> variable .)
    PUNTOCOMA       reduce using rule 113 (f -> variable .)
    COMA            reduce using rule 113 (f -> variable .)
    PARENTESISDER   reduce using rule 113 (f -> variable .)
    CORCHETEDER     reduce using rule 113 (f -> variable .)
    TO              reduce using rule 113 (f -> variable .)
    DO              reduce using rule 113 (f -> variable .)


state 112

    (75) asignacion -> variable IGUAL exp .

    PUNTOCOMA       reduce using rule 75 (asignacion -> variable IGUAL exp .)


state 113

    (94) exp -> t_exp .
    (95) exp -> t_exp . OR exp

    PUNTOCOMA       reduce using rule 94 (exp -> t_exp .)
    COMA            reduce using rule 94 (exp -> t_exp .)
    PARENTESISDER   reduce using rule 94 (exp -> t_exp .)
    CORCHETEDER     reduce using rule 94 (exp -> t_exp .)
    TO              reduce using rule 94 (exp -> t_exp .)
    DO              reduce using rule 94 (exp -> t_exp .)
    OR              shift and go to state 145


state 114

    (96) t_exp -> g_exp .
    (97) t_exp -> g_exp . AND t_exp

    OR              reduce using rule 96 (t_exp -> g_exp .)
    PUNTOCOMA       reduce using rule 96 (t_exp -> g_exp .)
    COMA            reduce using rule 96 (t_exp -> g_exp .)
    PARENTESISDER   reduce using rule 96 (t_exp -> g_exp .)
    CORCHETEDER     reduce using rule 96 (t_exp -> g_exp .)
    TO              reduce using rule 96 (t_exp -> g_exp .)
    DO              reduce using rule 96 (t_exp -> g_exp .)
    AND             shift and go to state 146


state 115

    (98) g_exp -> m_exp .
    (99) g_exp -> m_exp . EQUAL m_exp
    (100) g_exp -> m_exp . NOT m_exp
    (101) g_exp -> m_exp . GREATERTHAN m_exp
    (102) g_exp -> m_exp . LESSTHAN m_exp

    AND             reduce using rule 98 (g_exp -> m_exp .)
    OR              reduce using rule 98 (g_exp -> m_exp .)
    PUNTOCOMA       reduce using rule 98 (g_exp -> m_exp .)
    COMA            reduce using rule 98 (g_exp -> m_exp .)
    PARENTESISDER   reduce using rule 98 (g_exp -> m_exp .)
    CORCHETEDER     reduce using rule 98 (g_exp -> m_exp .)
    TO              reduce using rule 98 (g_exp -> m_exp .)
    DO              reduce using rule 98 (g_exp -> m_exp .)
    EQUAL           shift and go to state 147
    NOT             shift and go to state 148
    GREATERTHAN     shift and go to state 149
    LESSTHAN        shift and go to state 150


state 116

    (103) m_exp -> t .
    (104) m_exp -> t . MAS m_exp
    (105) m_exp -> t . MENOS m_exp

    EQUAL           reduce using rule 103 (m_exp -> t .)
    NOT             reduce using rule 103 (m_exp -> t .)
    GREATERTHAN     reduce using rule 103 (m_exp -> t .)
    LESSTHAN        reduce using rule 103 (m_exp -> t .)
    AND             reduce using rule 103 (m_exp -> t .)
    OR              reduce using rule 103 (m_exp -> t .)
    PUNTOCOMA       reduce using rule 103 (m_exp -> t .)
    COMA            reduce using rule 103 (m_exp -> t .)
    PARENTESISDER   reduce using rule 103 (m_exp -> t .)
    CORCHETEDER     reduce using rule 103 (m_exp -> t .)
    TO              reduce using rule 103 (m_exp -> t .)
    DO              reduce using rule 103 (m_exp -> t .)
    MAS             shift and go to state 151
    MENOS           shift and go to state 152


state 117

    (106) t -> f .
    (107) t -> f . POR t
    (108) t -> f . DIV t

    MAS             reduce using rule 106 (t -> f .)
    MENOS           reduce using rule 106 (t -> f .)
    EQUAL           reduce using rule 106 (t -> f .)
    NOT             reduce using rule 106 (t -> f .)
    GREATERTHAN     reduce using rule 106 (t -> f .)
    LESSTHAN        reduce using rule 106 (t -> f .)
    AND             reduce using rule 106 (t -> f .)
    OR              reduce using rule 106 (t -> f .)
    PUNTOCOMA       reduce using rule 106 (t -> f .)
    COMA            reduce using rule 106 (t -> f .)
    PARENTESISDER   reduce using rule 106 (t -> f .)
    CORCHETEDER     reduce using rule 106 (t -> f .)
    TO              reduce using rule 106 (t -> f .)
    DO              reduce using rule 106 (t -> f .)
    POR             shift and go to state 153
    DIV             shift and go to state 154


state 118

    (109) f -> PARENTESISIZQ . exp PARENTESISDER
    (94) exp -> . t_exp
    (95) exp -> . t_exp OR exp
    (96) t_exp -> . g_exp
    (97) t_exp -> . g_exp AND t_exp
    (98) g_exp -> . m_exp
    (99) g_exp -> . m_exp EQUAL m_exp
    (100) g_exp -> . m_exp NOT m_exp
    (101) g_exp -> . m_exp GREATERTHAN m_exp
    (102) g_exp -> . m_exp LESSTHAN m_exp
    (103) m_exp -> . t
    (104) m_exp -> . t MAS m_exp
    (105) m_exp -> . t MENOS m_exp
    (106) t -> . f
    (107) t -> . f POR t
    (108) t -> . f DIV t
    (109) f -> . PARENTESISIZQ exp PARENTESISDER
    (110) f -> . CTEI
    (111) f -> . CTEF
    (112) f -> . CTECH
    (113) f -> . variable
    (114) f -> . llamada
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER

    PARENTESISIZQ   shift and go to state 118
    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTECH           shift and go to state 121
    ID              shift and go to state 123

    exp                            shift and go to state 155
    t_exp                          shift and go to state 113
    g_exp                          shift and go to state 114
    m_exp                          shift and go to state 115
    t                              shift and go to state 116
    f                              shift and go to state 117
    variable                       shift and go to state 111
    llamada                        shift and go to state 122

state 119

    (110) f -> CTEI .

    POR             reduce using rule 110 (f -> CTEI .)
    DIV             reduce using rule 110 (f -> CTEI .)
    MAS             reduce using rule 110 (f -> CTEI .)
    MENOS           reduce using rule 110 (f -> CTEI .)
    EQUAL           reduce using rule 110 (f -> CTEI .)
    NOT             reduce using rule 110 (f -> CTEI .)
    GREATERTHAN     reduce using rule 110 (f -> CTEI .)
    LESSTHAN        reduce using rule 110 (f -> CTEI .)
    AND             reduce using rule 110 (f -> CTEI .)
    OR              reduce using rule 110 (f -> CTEI .)
    PUNTOCOMA       reduce using rule 110 (f -> CTEI .)
    COMA            reduce using rule 110 (f -> CTEI .)
    PARENTESISDER   reduce using rule 110 (f -> CTEI .)
    CORCHETEDER     reduce using rule 110 (f -> CTEI .)
    TO              reduce using rule 110 (f -> CTEI .)
    DO              reduce using rule 110 (f -> CTEI .)


state 120

    (111) f -> CTEF .

    POR             reduce using rule 111 (f -> CTEF .)
    DIV             reduce using rule 111 (f -> CTEF .)
    MAS             reduce using rule 111 (f -> CTEF .)
    MENOS           reduce using rule 111 (f -> CTEF .)
    EQUAL           reduce using rule 111 (f -> CTEF .)
    NOT             reduce using rule 111 (f -> CTEF .)
    GREATERTHAN     reduce using rule 111 (f -> CTEF .)
    LESSTHAN        reduce using rule 111 (f -> CTEF .)
    AND             reduce using rule 111 (f -> CTEF .)
    OR              reduce using rule 111 (f -> CTEF .)
    PUNTOCOMA       reduce using rule 111 (f -> CTEF .)
    COMA            reduce using rule 111 (f -> CTEF .)
    PARENTESISDER   reduce using rule 111 (f -> CTEF .)
    CORCHETEDER     reduce using rule 111 (f -> CTEF .)
    TO              reduce using rule 111 (f -> CTEF .)
    DO              reduce using rule 111 (f -> CTEF .)


state 121

    (112) f -> CTECH .

    POR             reduce using rule 112 (f -> CTECH .)
    DIV             reduce using rule 112 (f -> CTECH .)
    MAS             reduce using rule 112 (f -> CTECH .)
    MENOS           reduce using rule 112 (f -> CTECH .)
    EQUAL           reduce using rule 112 (f -> CTECH .)
    NOT             reduce using rule 112 (f -> CTECH .)
    GREATERTHAN     reduce using rule 112 (f -> CTECH .)
    LESSTHAN        reduce using rule 112 (f -> CTECH .)
    AND             reduce using rule 112 (f -> CTECH .)
    OR              reduce using rule 112 (f -> CTECH .)
    PUNTOCOMA       reduce using rule 112 (f -> CTECH .)
    COMA            reduce using rule 112 (f -> CTECH .)
    PARENTESISDER   reduce using rule 112 (f -> CTECH .)
    CORCHETEDER     reduce using rule 112 (f -> CTECH .)
    TO              reduce using rule 112 (f -> CTECH .)
    DO              reduce using rule 112 (f -> CTECH .)


state 122

    (114) f -> llamada .

    POR             reduce using rule 114 (f -> llamada .)
    DIV             reduce using rule 114 (f -> llamada .)
    MAS             reduce using rule 114 (f -> llamada .)
    MENOS           reduce using rule 114 (f -> llamada .)
    EQUAL           reduce using rule 114 (f -> llamada .)
    NOT             reduce using rule 114 (f -> llamada .)
    GREATERTHAN     reduce using rule 114 (f -> llamada .)
    LESSTHAN        reduce using rule 114 (f -> llamada .)
    AND             reduce using rule 114 (f -> llamada .)
    OR              reduce using rule 114 (f -> llamada .)
    PUNTOCOMA       reduce using rule 114 (f -> llamada .)
    COMA            reduce using rule 114 (f -> llamada .)
    PARENTESISDER   reduce using rule 114 (f -> llamada .)
    CORCHETEDER     reduce using rule 114 (f -> llamada .)
    TO              reduce using rule 114 (f -> llamada .)
    DO              reduce using rule 114 (f -> llamada .)


state 123

    (82) variable -> ID .
    (83) variable -> ID . CORCHETEIZQ exp CORCHETEDER
    (84) variable -> ID . CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER
    (76) llamada -> ID . PARENTESISIZQ llamadap PARENTESISDER

    POR             reduce using rule 82 (variable -> ID .)
    DIV             reduce using rule 82 (variable -> ID .)
    MAS             reduce using rule 82 (variable -> ID .)
    MENOS           reduce using rule 82 (variable -> ID .)
    EQUAL           reduce using rule 82 (variable -> ID .)
    NOT             reduce using rule 82 (variable -> ID .)
    GREATERTHAN     reduce using rule 82 (variable -> ID .)
    LESSTHAN        reduce using rule 82 (variable -> ID .)
    AND             reduce using rule 82 (variable -> ID .)
    OR              reduce using rule 82 (variable -> ID .)
    PUNTOCOMA       reduce using rule 82 (variable -> ID .)
    COMA            reduce using rule 82 (variable -> ID .)
    PARENTESISDER   reduce using rule 82 (variable -> ID .)
    CORCHETEDER     reduce using rule 82 (variable -> ID .)
    TO              reduce using rule 82 (variable -> ID .)
    DO              reduce using rule 82 (variable -> ID .)
    CORCHETEIZQ     shift and go to state 91
    PARENTESISIZQ   shift and go to state 90


state 124

    (76) llamada -> ID PARENTESISIZQ llamadap . PARENTESISDER

    PARENTESISDER   shift and go to state 156


state 125

    (77) llamadap -> exp .
    (78) llamadap -> exp . COMA llamadap

    PARENTESISDER   reduce using rule 77 (llamadap -> exp .)
    COMA            shift and go to state 157


state 126

    (83) variable -> ID CORCHETEIZQ exp . CORCHETEDER
    (84) variable -> ID CORCHETEIZQ exp . CORCHETEDER CORCHETEIZQ exp CORCHETEDER

    CORCHETEDER     shift and go to state 158


state 127

    (79) lee -> READ PARENTESISIZQ leep . PARENTESISDER

    PARENTESISDER   shift and go to state 159


state 128

    (80) leep -> variable .
    (81) leep -> variable . COMA leep

    PARENTESISDER   reduce using rule 80 (leep -> variable .)
    COMA            shift and go to state 160


state 129

    (85) escribe -> WRITE PARENTESISIZQ escribep . PARENTESISDER

    PARENTESISDER   shift and go to state 161


state 130

    (86) escribep -> exp .
    (87) escribep -> exp . COMA escribep

    PARENTESISDER   reduce using rule 86 (escribep -> exp .)
    COMA            shift and go to state 162


state 131

    (88) escribep -> LETRERO .
    (89) escribep -> LETRERO . COMA escribep

    PARENTESISDER   reduce using rule 88 (escribep -> LETRERO .)
    COMA            shift and go to state 163


state 132

    (90) condicion -> IF PARENTESISIZQ exp . PARENTESISDER LLAVEIZQ estatuto LLAVEDER
    (91) condicion -> IF PARENTESISIZQ exp . PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER

    PARENTESISDER   shift and go to state 164


state 133

    (92) ciclo_w -> WHILE PARENTESISIZQ exp . PARENTESISDER DO LLAVEIZQ estatuto LLAVEDER

    PARENTESISDER   shift and go to state 165


state 134

    (93) ciclo_f -> FROM variable IGUAL . exp TO exp DO LLAVEIZQ estatuto LLAVEDER
    (94) exp -> . t_exp
    (95) exp -> . t_exp OR exp
    (96) t_exp -> . g_exp
    (97) t_exp -> . g_exp AND t_exp
    (98) g_exp -> . m_exp
    (99) g_exp -> . m_exp EQUAL m_exp
    (100) g_exp -> . m_exp NOT m_exp
    (101) g_exp -> . m_exp GREATERTHAN m_exp
    (102) g_exp -> . m_exp LESSTHAN m_exp
    (103) m_exp -> . t
    (104) m_exp -> . t MAS m_exp
    (105) m_exp -> . t MENOS m_exp
    (106) t -> . f
    (107) t -> . f POR t
    (108) t -> . f DIV t
    (109) f -> . PARENTESISIZQ exp PARENTESISDER
    (110) f -> . CTEI
    (111) f -> . CTEF
    (112) f -> . CTECH
    (113) f -> . variable
    (114) f -> . llamada
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER

    PARENTESISIZQ   shift and go to state 118
    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTECH           shift and go to state 121
    ID              shift and go to state 123

    variable                       shift and go to state 111
    exp                            shift and go to state 166
    t_exp                          shift and go to state 113
    g_exp                          shift and go to state 114
    m_exp                          shift and go to state 115
    t                              shift and go to state 116
    f                              shift and go to state 117
    llamada                        shift and go to state 122

state 135

    (11) clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase . LLAVEDER PUNTOCOMA
    (12) clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase . LLAVEDER PUNTOCOMA clase

    LLAVEDER        shift and go to state 167


state 136

    (13) clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ LLAVEDER . PUNTOCOMA
    (14) clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ LLAVEDER . PUNTOCOMA clase

    PUNTOCOMA       shift and go to state 168


state 137

    (16) clase -> CLASS ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA clase .

    MAIN            reduce using rule 16 (clase -> CLASS ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA clase .)
    VAR             reduce using rule 16 (clase -> CLASS ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA clase .)
    FUNC            reduce using rule 16 (clase -> CLASS ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA clase .)


state 138

    (54) bloque_clase -> ATTRIBUTE DOSPUNTOS atributo METHOD . DOSPUNTOS metodo

    DOSPUNTOS       shift and go to state 169


state 139

    (55) atributo -> tipo_clase tipo_simple . ID PUNTOCOMA
    (56) atributo -> tipo_clase tipo_simple . ID PUNTOCOMA atributo

    ID              shift and go to state 170


state 140

    (29) varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ . CTEI CORCHETEDER PUNTOCOMA
    (30) varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ . CTEI CORCHETEDER PUNTOCOMA varp

    CTEI            shift and go to state 171


state 141

    (27) varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA .
    (28) varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA . varp
    (23) varp -> . tipo_compuesto ID PUNTOCOMA
    (24) varp -> . tipo_compuesto ID PUNTOCOMA varp
    (25) varp -> . tipo_simple ID PUNTOCOMA
    (26) varp -> . tipo_simple ID PUNTOCOMA varp
    (27) varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
    (28) varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA varp
    (29) varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
    (30) varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA varp
    (34) tipo_compuesto -> . ID
    (31) tipo_simple -> . INT
    (32) tipo_simple -> . FLOAT
    (33) tipo_simple -> . CHAR

    MAIN            reduce using rule 27 (varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA .)
    FUNC            reduce using rule 27 (varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA .)
    ID              shift and go to state 23
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27

    tipo_simple                    shift and go to state 24
    varp                           shift and go to state 172
    tipo_compuesto                 shift and go to state 22

state 142

    (51) parametros -> tipo_simple ID COMA . parametros
    (50) parametros -> . tipo_simple ID
    (51) parametros -> . tipo_simple ID COMA parametros
    (31) tipo_simple -> . INT
    (32) tipo_simple -> . FLOAT
    (33) tipo_simple -> . CHAR

    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27

    tipo_simple                    shift and go to state 78
    parametros                     shift and go to state 173

state 143

    (35) funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA . dec_var cuerpo
    (36) funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA . dec_var cuerpo funcion
    (37) funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA . cuerpo
    (38) funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA . cuerpo funcion
    (43) dec_var -> . VAR dec_varp
    (52) cuerpo -> . LLAVEIZQ estatuto RETURN exp PUNTOCOMA LLAVEDER
    (53) cuerpo -> . LLAVEIZQ estatuto LLAVEDER

    VAR             shift and go to state 176
    LLAVEIZQ        shift and go to state 177

    dec_var                        shift and go to state 174
    cuerpo                         shift and go to state 175

state 144

    (39) funcion -> FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA . dec_var cuerpo
    (40) funcion -> FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA . dec_var cuerpo funcion
    (41) funcion -> FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA . cuerpo
    (42) funcion -> FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA . cuerpo funcion
    (43) dec_var -> . VAR dec_varp
    (52) cuerpo -> . LLAVEIZQ estatuto RETURN exp PUNTOCOMA LLAVEDER
    (53) cuerpo -> . LLAVEIZQ estatuto LLAVEDER

    VAR             shift and go to state 176
    LLAVEIZQ        shift and go to state 177

    dec_var                        shift and go to state 178
    cuerpo                         shift and go to state 179

state 145

    (95) exp -> t_exp OR . exp
    (94) exp -> . t_exp
    (95) exp -> . t_exp OR exp
    (96) t_exp -> . g_exp
    (97) t_exp -> . g_exp AND t_exp
    (98) g_exp -> . m_exp
    (99) g_exp -> . m_exp EQUAL m_exp
    (100) g_exp -> . m_exp NOT m_exp
    (101) g_exp -> . m_exp GREATERTHAN m_exp
    (102) g_exp -> . m_exp LESSTHAN m_exp
    (103) m_exp -> . t
    (104) m_exp -> . t MAS m_exp
    (105) m_exp -> . t MENOS m_exp
    (106) t -> . f
    (107) t -> . f POR t
    (108) t -> . f DIV t
    (109) f -> . PARENTESISIZQ exp PARENTESISDER
    (110) f -> . CTEI
    (111) f -> . CTEF
    (112) f -> . CTECH
    (113) f -> . variable
    (114) f -> . llamada
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER

    PARENTESISIZQ   shift and go to state 118
    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTECH           shift and go to state 121
    ID              shift and go to state 123

    t_exp                          shift and go to state 113
    exp                            shift and go to state 180
    g_exp                          shift and go to state 114
    m_exp                          shift and go to state 115
    t                              shift and go to state 116
    f                              shift and go to state 117
    variable                       shift and go to state 111
    llamada                        shift and go to state 122

state 146

    (97) t_exp -> g_exp AND . t_exp
    (96) t_exp -> . g_exp
    (97) t_exp -> . g_exp AND t_exp
    (98) g_exp -> . m_exp
    (99) g_exp -> . m_exp EQUAL m_exp
    (100) g_exp -> . m_exp NOT m_exp
    (101) g_exp -> . m_exp GREATERTHAN m_exp
    (102) g_exp -> . m_exp LESSTHAN m_exp
    (103) m_exp -> . t
    (104) m_exp -> . t MAS m_exp
    (105) m_exp -> . t MENOS m_exp
    (106) t -> . f
    (107) t -> . f POR t
    (108) t -> . f DIV t
    (109) f -> . PARENTESISIZQ exp PARENTESISDER
    (110) f -> . CTEI
    (111) f -> . CTEF
    (112) f -> . CTECH
    (113) f -> . variable
    (114) f -> . llamada
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER

    PARENTESISIZQ   shift and go to state 118
    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTECH           shift and go to state 121
    ID              shift and go to state 123

    g_exp                          shift and go to state 114
    t_exp                          shift and go to state 181
    m_exp                          shift and go to state 115
    t                              shift and go to state 116
    f                              shift and go to state 117
    variable                       shift and go to state 111
    llamada                        shift and go to state 122

state 147

    (99) g_exp -> m_exp EQUAL . m_exp
    (103) m_exp -> . t
    (104) m_exp -> . t MAS m_exp
    (105) m_exp -> . t MENOS m_exp
    (106) t -> . f
    (107) t -> . f POR t
    (108) t -> . f DIV t
    (109) f -> . PARENTESISIZQ exp PARENTESISDER
    (110) f -> . CTEI
    (111) f -> . CTEF
    (112) f -> . CTECH
    (113) f -> . variable
    (114) f -> . llamada
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER

    PARENTESISIZQ   shift and go to state 118
    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTECH           shift and go to state 121
    ID              shift and go to state 123

    m_exp                          shift and go to state 182
    t                              shift and go to state 116
    f                              shift and go to state 117
    variable                       shift and go to state 111
    llamada                        shift and go to state 122

state 148

    (100) g_exp -> m_exp NOT . m_exp
    (103) m_exp -> . t
    (104) m_exp -> . t MAS m_exp
    (105) m_exp -> . t MENOS m_exp
    (106) t -> . f
    (107) t -> . f POR t
    (108) t -> . f DIV t
    (109) f -> . PARENTESISIZQ exp PARENTESISDER
    (110) f -> . CTEI
    (111) f -> . CTEF
    (112) f -> . CTECH
    (113) f -> . variable
    (114) f -> . llamada
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER

    PARENTESISIZQ   shift and go to state 118
    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTECH           shift and go to state 121
    ID              shift and go to state 123

    m_exp                          shift and go to state 183
    t                              shift and go to state 116
    f                              shift and go to state 117
    variable                       shift and go to state 111
    llamada                        shift and go to state 122

state 149

    (101) g_exp -> m_exp GREATERTHAN . m_exp
    (103) m_exp -> . t
    (104) m_exp -> . t MAS m_exp
    (105) m_exp -> . t MENOS m_exp
    (106) t -> . f
    (107) t -> . f POR t
    (108) t -> . f DIV t
    (109) f -> . PARENTESISIZQ exp PARENTESISDER
    (110) f -> . CTEI
    (111) f -> . CTEF
    (112) f -> . CTECH
    (113) f -> . variable
    (114) f -> . llamada
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER

    PARENTESISIZQ   shift and go to state 118
    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTECH           shift and go to state 121
    ID              shift and go to state 123

    m_exp                          shift and go to state 184
    t                              shift and go to state 116
    f                              shift and go to state 117
    variable                       shift and go to state 111
    llamada                        shift and go to state 122

state 150

    (102) g_exp -> m_exp LESSTHAN . m_exp
    (103) m_exp -> . t
    (104) m_exp -> . t MAS m_exp
    (105) m_exp -> . t MENOS m_exp
    (106) t -> . f
    (107) t -> . f POR t
    (108) t -> . f DIV t
    (109) f -> . PARENTESISIZQ exp PARENTESISDER
    (110) f -> . CTEI
    (111) f -> . CTEF
    (112) f -> . CTECH
    (113) f -> . variable
    (114) f -> . llamada
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER

    PARENTESISIZQ   shift and go to state 118
    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTECH           shift and go to state 121
    ID              shift and go to state 123

    m_exp                          shift and go to state 185
    t                              shift and go to state 116
    f                              shift and go to state 117
    variable                       shift and go to state 111
    llamada                        shift and go to state 122

state 151

    (104) m_exp -> t MAS . m_exp
    (103) m_exp -> . t
    (104) m_exp -> . t MAS m_exp
    (105) m_exp -> . t MENOS m_exp
    (106) t -> . f
    (107) t -> . f POR t
    (108) t -> . f DIV t
    (109) f -> . PARENTESISIZQ exp PARENTESISDER
    (110) f -> . CTEI
    (111) f -> . CTEF
    (112) f -> . CTECH
    (113) f -> . variable
    (114) f -> . llamada
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER

    PARENTESISIZQ   shift and go to state 118
    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTECH           shift and go to state 121
    ID              shift and go to state 123

    t                              shift and go to state 116
    m_exp                          shift and go to state 186
    f                              shift and go to state 117
    variable                       shift and go to state 111
    llamada                        shift and go to state 122

state 152

    (105) m_exp -> t MENOS . m_exp
    (103) m_exp -> . t
    (104) m_exp -> . t MAS m_exp
    (105) m_exp -> . t MENOS m_exp
    (106) t -> . f
    (107) t -> . f POR t
    (108) t -> . f DIV t
    (109) f -> . PARENTESISIZQ exp PARENTESISDER
    (110) f -> . CTEI
    (111) f -> . CTEF
    (112) f -> . CTECH
    (113) f -> . variable
    (114) f -> . llamada
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER

    PARENTESISIZQ   shift and go to state 118
    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTECH           shift and go to state 121
    ID              shift and go to state 123

    t                              shift and go to state 116
    m_exp                          shift and go to state 187
    f                              shift and go to state 117
    variable                       shift and go to state 111
    llamada                        shift and go to state 122

state 153

    (107) t -> f POR . t
    (106) t -> . f
    (107) t -> . f POR t
    (108) t -> . f DIV t
    (109) f -> . PARENTESISIZQ exp PARENTESISDER
    (110) f -> . CTEI
    (111) f -> . CTEF
    (112) f -> . CTECH
    (113) f -> . variable
    (114) f -> . llamada
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER

    PARENTESISIZQ   shift and go to state 118
    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTECH           shift and go to state 121
    ID              shift and go to state 123

    f                              shift and go to state 117
    t                              shift and go to state 188
    variable                       shift and go to state 111
    llamada                        shift and go to state 122

state 154

    (108) t -> f DIV . t
    (106) t -> . f
    (107) t -> . f POR t
    (108) t -> . f DIV t
    (109) f -> . PARENTESISIZQ exp PARENTESISDER
    (110) f -> . CTEI
    (111) f -> . CTEF
    (112) f -> . CTECH
    (113) f -> . variable
    (114) f -> . llamada
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER

    PARENTESISIZQ   shift and go to state 118
    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTECH           shift and go to state 121
    ID              shift and go to state 123

    f                              shift and go to state 117
    t                              shift and go to state 189
    variable                       shift and go to state 111
    llamada                        shift and go to state 122

state 155

    (109) f -> PARENTESISIZQ exp . PARENTESISDER

    PARENTESISDER   shift and go to state 190


state 156

    (76) llamada -> ID PARENTESISIZQ llamadap PARENTESISDER .

    PUNTOCOMA       reduce using rule 76 (llamada -> ID PARENTESISIZQ llamadap PARENTESISDER .)
    POR             reduce using rule 76 (llamada -> ID PARENTESISIZQ llamadap PARENTESISDER .)
    DIV             reduce using rule 76 (llamada -> ID PARENTESISIZQ llamadap PARENTESISDER .)
    MAS             reduce using rule 76 (llamada -> ID PARENTESISIZQ llamadap PARENTESISDER .)
    MENOS           reduce using rule 76 (llamada -> ID PARENTESISIZQ llamadap PARENTESISDER .)
    EQUAL           reduce using rule 76 (llamada -> ID PARENTESISIZQ llamadap PARENTESISDER .)
    NOT             reduce using rule 76 (llamada -> ID PARENTESISIZQ llamadap PARENTESISDER .)
    GREATERTHAN     reduce using rule 76 (llamada -> ID PARENTESISIZQ llamadap PARENTESISDER .)
    LESSTHAN        reduce using rule 76 (llamada -> ID PARENTESISIZQ llamadap PARENTESISDER .)
    AND             reduce using rule 76 (llamada -> ID PARENTESISIZQ llamadap PARENTESISDER .)
    OR              reduce using rule 76 (llamada -> ID PARENTESISIZQ llamadap PARENTESISDER .)
    COMA            reduce using rule 76 (llamada -> ID PARENTESISIZQ llamadap PARENTESISDER .)
    PARENTESISDER   reduce using rule 76 (llamada -> ID PARENTESISIZQ llamadap PARENTESISDER .)
    CORCHETEDER     reduce using rule 76 (llamada -> ID PARENTESISIZQ llamadap PARENTESISDER .)
    TO              reduce using rule 76 (llamada -> ID PARENTESISIZQ llamadap PARENTESISDER .)
    DO              reduce using rule 76 (llamada -> ID PARENTESISIZQ llamadap PARENTESISDER .)


state 157

    (78) llamadap -> exp COMA . llamadap
    (77) llamadap -> . exp
    (78) llamadap -> . exp COMA llamadap
    (94) exp -> . t_exp
    (95) exp -> . t_exp OR exp
    (96) t_exp -> . g_exp
    (97) t_exp -> . g_exp AND t_exp
    (98) g_exp -> . m_exp
    (99) g_exp -> . m_exp EQUAL m_exp
    (100) g_exp -> . m_exp NOT m_exp
    (101) g_exp -> . m_exp GREATERTHAN m_exp
    (102) g_exp -> . m_exp LESSTHAN m_exp
    (103) m_exp -> . t
    (104) m_exp -> . t MAS m_exp
    (105) m_exp -> . t MENOS m_exp
    (106) t -> . f
    (107) t -> . f POR t
    (108) t -> . f DIV t
    (109) f -> . PARENTESISIZQ exp PARENTESISDER
    (110) f -> . CTEI
    (111) f -> . CTEF
    (112) f -> . CTECH
    (113) f -> . variable
    (114) f -> . llamada
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER

    PARENTESISIZQ   shift and go to state 118
    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTECH           shift and go to state 121
    ID              shift and go to state 123

    exp                            shift and go to state 125
    llamadap                       shift and go to state 191
    t_exp                          shift and go to state 113
    g_exp                          shift and go to state 114
    m_exp                          shift and go to state 115
    t                              shift and go to state 116
    f                              shift and go to state 117
    variable                       shift and go to state 111
    llamada                        shift and go to state 122

state 158

    (83) variable -> ID CORCHETEIZQ exp CORCHETEDER .
    (84) variable -> ID CORCHETEIZQ exp CORCHETEDER . CORCHETEIZQ exp CORCHETEDER

    IGUAL           reduce using rule 83 (variable -> ID CORCHETEIZQ exp CORCHETEDER .)
    POR             reduce using rule 83 (variable -> ID CORCHETEIZQ exp CORCHETEDER .)
    DIV             reduce using rule 83 (variable -> ID CORCHETEIZQ exp CORCHETEDER .)
    MAS             reduce using rule 83 (variable -> ID CORCHETEIZQ exp CORCHETEDER .)
    MENOS           reduce using rule 83 (variable -> ID CORCHETEIZQ exp CORCHETEDER .)
    EQUAL           reduce using rule 83 (variable -> ID CORCHETEIZQ exp CORCHETEDER .)
    NOT             reduce using rule 83 (variable -> ID CORCHETEIZQ exp CORCHETEDER .)
    GREATERTHAN     reduce using rule 83 (variable -> ID CORCHETEIZQ exp CORCHETEDER .)
    LESSTHAN        reduce using rule 83 (variable -> ID CORCHETEIZQ exp CORCHETEDER .)
    AND             reduce using rule 83 (variable -> ID CORCHETEIZQ exp CORCHETEDER .)
    OR              reduce using rule 83 (variable -> ID CORCHETEIZQ exp CORCHETEDER .)
    PUNTOCOMA       reduce using rule 83 (variable -> ID CORCHETEIZQ exp CORCHETEDER .)
    COMA            reduce using rule 83 (variable -> ID CORCHETEIZQ exp CORCHETEDER .)
    PARENTESISDER   reduce using rule 83 (variable -> ID CORCHETEIZQ exp CORCHETEDER .)
    CORCHETEDER     reduce using rule 83 (variable -> ID CORCHETEIZQ exp CORCHETEDER .)
    TO              reduce using rule 83 (variable -> ID CORCHETEIZQ exp CORCHETEDER .)
    DO              reduce using rule 83 (variable -> ID CORCHETEIZQ exp CORCHETEDER .)
    CORCHETEIZQ     shift and go to state 192


state 159

    (79) lee -> READ PARENTESISIZQ leep PARENTESISDER .

    PUNTOCOMA       reduce using rule 79 (lee -> READ PARENTESISIZQ leep PARENTESISDER .)


state 160

    (81) leep -> variable COMA . leep
    (80) leep -> . variable
    (81) leep -> . variable COMA leep
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER

    ID              shift and go to state 97

    variable                       shift and go to state 128
    leep                           shift and go to state 193

state 161

    (85) escribe -> WRITE PARENTESISIZQ escribep PARENTESISDER .

    PUNTOCOMA       reduce using rule 85 (escribe -> WRITE PARENTESISIZQ escribep PARENTESISDER .)


state 162

    (87) escribep -> exp COMA . escribep
    (86) escribep -> . exp
    (87) escribep -> . exp COMA escribep
    (88) escribep -> . LETRERO
    (89) escribep -> . LETRERO COMA escribep
    (94) exp -> . t_exp
    (95) exp -> . t_exp OR exp
    (96) t_exp -> . g_exp
    (97) t_exp -> . g_exp AND t_exp
    (98) g_exp -> . m_exp
    (99) g_exp -> . m_exp EQUAL m_exp
    (100) g_exp -> . m_exp NOT m_exp
    (101) g_exp -> . m_exp GREATERTHAN m_exp
    (102) g_exp -> . m_exp LESSTHAN m_exp
    (103) m_exp -> . t
    (104) m_exp -> . t MAS m_exp
    (105) m_exp -> . t MENOS m_exp
    (106) t -> . f
    (107) t -> . f POR t
    (108) t -> . f DIV t
    (109) f -> . PARENTESISIZQ exp PARENTESISDER
    (110) f -> . CTEI
    (111) f -> . CTEF
    (112) f -> . CTECH
    (113) f -> . variable
    (114) f -> . llamada
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER

    LETRERO         shift and go to state 131
    PARENTESISIZQ   shift and go to state 118
    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTECH           shift and go to state 121
    ID              shift and go to state 123

    exp                            shift and go to state 130
    escribep                       shift and go to state 194
    t_exp                          shift and go to state 113
    g_exp                          shift and go to state 114
    m_exp                          shift and go to state 115
    t                              shift and go to state 116
    f                              shift and go to state 117
    variable                       shift and go to state 111
    llamada                        shift and go to state 122

state 163

    (89) escribep -> LETRERO COMA . escribep
    (86) escribep -> . exp
    (87) escribep -> . exp COMA escribep
    (88) escribep -> . LETRERO
    (89) escribep -> . LETRERO COMA escribep
    (94) exp -> . t_exp
    (95) exp -> . t_exp OR exp
    (96) t_exp -> . g_exp
    (97) t_exp -> . g_exp AND t_exp
    (98) g_exp -> . m_exp
    (99) g_exp -> . m_exp EQUAL m_exp
    (100) g_exp -> . m_exp NOT m_exp
    (101) g_exp -> . m_exp GREATERTHAN m_exp
    (102) g_exp -> . m_exp LESSTHAN m_exp
    (103) m_exp -> . t
    (104) m_exp -> . t MAS m_exp
    (105) m_exp -> . t MENOS m_exp
    (106) t -> . f
    (107) t -> . f POR t
    (108) t -> . f DIV t
    (109) f -> . PARENTESISIZQ exp PARENTESISDER
    (110) f -> . CTEI
    (111) f -> . CTEF
    (112) f -> . CTECH
    (113) f -> . variable
    (114) f -> . llamada
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER

    LETRERO         shift and go to state 131
    PARENTESISIZQ   shift and go to state 118
    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTECH           shift and go to state 121
    ID              shift and go to state 123

    escribep                       shift and go to state 195
    exp                            shift and go to state 130
    t_exp                          shift and go to state 113
    g_exp                          shift and go to state 114
    m_exp                          shift and go to state 115
    t                              shift and go to state 116
    f                              shift and go to state 117
    variable                       shift and go to state 111
    llamada                        shift and go to state 122

state 164

    (90) condicion -> IF PARENTESISIZQ exp PARENTESISDER . LLAVEIZQ estatuto LLAVEDER
    (91) condicion -> IF PARENTESISIZQ exp PARENTESISDER . LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER

    LLAVEIZQ        shift and go to state 196


state 165

    (92) ciclo_w -> WHILE PARENTESISIZQ exp PARENTESISDER . DO LLAVEIZQ estatuto LLAVEDER

    DO              shift and go to state 197


state 166

    (93) ciclo_f -> FROM variable IGUAL exp . TO exp DO LLAVEIZQ estatuto LLAVEDER

    TO              shift and go to state 198


state 167

    (11) clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER . PUNTOCOMA
    (12) clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER . PUNTOCOMA clase

    PUNTOCOMA       shift and go to state 199


state 168

    (13) clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ LLAVEDER PUNTOCOMA .
    (14) clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ LLAVEDER PUNTOCOMA . clase
    (11) clase -> . CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA
    (12) clase -> . CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA clase
    (13) clase -> . CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ LLAVEDER PUNTOCOMA
    (14) clase -> . CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ LLAVEDER PUNTOCOMA clase
    (15) clase -> . CLASS ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA
    (16) clase -> . CLASS ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA clase
    (17) clase -> . CLASS ID LLAVEIZQ LLAVEDER PUNTOCOMA
    (18) clase -> . CLASS ID LLAVEIZQ LLAVEDER PUNTOCOMA clase

    MAIN            reduce using rule 13 (clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ LLAVEDER PUNTOCOMA .)
    VAR             reduce using rule 13 (clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ LLAVEDER PUNTOCOMA .)
    FUNC            reduce using rule 13 (clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ LLAVEDER PUNTOCOMA .)
    CLASS           shift and go to state 10

    clase                          shift and go to state 200

state 169

    (54) bloque_clase -> ATTRIBUTE DOSPUNTOS atributo METHOD DOSPUNTOS . metodo
    (57) metodo -> . tipo_clase tipo_simple ID PARENTESISIZQ parametros PARENTESISDER cuerpo
    (58) metodo -> . tipo_clase tipo_simple ID PARENTESISIZQ parametros PARENTESISDER cuerpo metodo
    (59) metodo -> . tipo_clase VOID ID PARENTESISIZQ parametros PARENTESISDER cuerpo
    (60) metodo -> . tipo_clase VOID ID PARENTESISIZQ parametros PARENTESISDER cuerpo metodo
    (19) tipo_clase -> . PUBLIC
    (20) tipo_clase -> . PROTECTED
    (21) tipo_clase -> . PRIVATE

    PUBLIC          shift and go to state 44
    PROTECTED       shift and go to state 45
    PRIVATE         shift and go to state 46

    metodo                         shift and go to state 201
    tipo_clase                     shift and go to state 202

state 170

    (55) atributo -> tipo_clase tipo_simple ID . PUNTOCOMA
    (56) atributo -> tipo_clase tipo_simple ID . PUNTOCOMA atributo

    PUNTOCOMA       shift and go to state 203


state 171

    (29) varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI . CORCHETEDER PUNTOCOMA
    (30) varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI . CORCHETEDER PUNTOCOMA varp

    CORCHETEDER     shift and go to state 204


state 172

    (28) varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA varp .

    MAIN            reduce using rule 28 (varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA varp .)
    FUNC            reduce using rule 28 (varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA varp .)


state 173

    (51) parametros -> tipo_simple ID COMA parametros .

    PARENTESISDER   reduce using rule 51 (parametros -> tipo_simple ID COMA parametros .)


state 174

    (35) funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var . cuerpo
    (36) funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var . cuerpo funcion
    (52) cuerpo -> . LLAVEIZQ estatuto RETURN exp PUNTOCOMA LLAVEDER
    (53) cuerpo -> . LLAVEIZQ estatuto LLAVEDER

    LLAVEIZQ        shift and go to state 177

    cuerpo                         shift and go to state 205

state 175

    (37) funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo .
    (38) funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo . funcion
    (35) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo
    (36) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
    (37) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo
    (38) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion
    (39) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo
    (40) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
    (41) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo
    (42) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion

    MAIN            reduce using rule 37 (funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo .)
    FUNC            shift and go to state 12

    funcion                        shift and go to state 206

state 176

    (43) dec_var -> VAR . dec_varp
    (44) dec_varp -> . tipo_simple ID PUNTOCOMA dec_varp
    (45) dec_varp -> . tipo_simple ID PUNTOCOMA
    (46) dec_varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA dec_varp
    (47) dec_varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
    (48) dec_varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA dec_varp
    (49) dec_varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
    (31) tipo_simple -> . INT
    (32) tipo_simple -> . FLOAT
    (33) tipo_simple -> . CHAR

    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27

    dec_varp                       shift and go to state 207
    tipo_simple                    shift and go to state 208

state 177

    (52) cuerpo -> LLAVEIZQ . estatuto RETURN exp PUNTOCOMA LLAVEDER
    (53) cuerpo -> LLAVEIZQ . estatuto LLAVEDER
    (61) estatuto -> . asignacion PUNTOCOMA
    (62) estatuto -> . asignacion PUNTOCOMA estatuto
    (63) estatuto -> . llamada PUNTOCOMA
    (64) estatuto -> . llamada PUNTOCOMA estatuto
    (65) estatuto -> . lee PUNTOCOMA
    (66) estatuto -> . lee PUNTOCOMA estatuto
    (67) estatuto -> . escribe PUNTOCOMA
    (68) estatuto -> . escribe PUNTOCOMA estatuto
    (69) estatuto -> . condicion
    (70) estatuto -> . condicion estatuto
    (71) estatuto -> . ciclo_w
    (72) estatuto -> . ciclo_w estatuto
    (73) estatuto -> . ciclo_f
    (74) estatuto -> . ciclo_f estatuto
    (75) asignacion -> . variable IGUAL exp
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER
    (79) lee -> . READ PARENTESISIZQ leep PARENTESISDER
    (85) escribe -> . WRITE PARENTESISIZQ escribep PARENTESISDER
    (90) condicion -> . IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER
    (91) condicion -> . IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER
    (92) ciclo_w -> . WHILE PARENTESISIZQ exp PARENTESISDER DO LLAVEIZQ estatuto LLAVEDER
    (93) ciclo_f -> . FROM variable IGUAL exp TO exp DO LLAVEIZQ estatuto LLAVEDER
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER

    ID              shift and go to state 65
    READ            shift and go to state 66
    WRITE           shift and go to state 67
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    FROM            shift and go to state 70

    estatuto                       shift and go to state 209
    asignacion                     shift and go to state 57
    llamada                        shift and go to state 58
    lee                            shift and go to state 59
    escribe                        shift and go to state 60
    condicion                      shift and go to state 61
    ciclo_w                        shift and go to state 62
    ciclo_f                        shift and go to state 63
    variable                       shift and go to state 64

state 178

    (39) funcion -> FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var . cuerpo
    (40) funcion -> FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var . cuerpo funcion
    (52) cuerpo -> . LLAVEIZQ estatuto RETURN exp PUNTOCOMA LLAVEDER
    (53) cuerpo -> . LLAVEIZQ estatuto LLAVEDER

    LLAVEIZQ        shift and go to state 177

    cuerpo                         shift and go to state 210

state 179

    (41) funcion -> FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo .
    (42) funcion -> FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo . funcion
    (35) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo
    (36) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
    (37) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo
    (38) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion
    (39) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo
    (40) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
    (41) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo
    (42) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion

    MAIN            reduce using rule 41 (funcion -> FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo .)
    FUNC            shift and go to state 12

    funcion                        shift and go to state 211

state 180

    (95) exp -> t_exp OR exp .

    PUNTOCOMA       reduce using rule 95 (exp -> t_exp OR exp .)
    COMA            reduce using rule 95 (exp -> t_exp OR exp .)
    PARENTESISDER   reduce using rule 95 (exp -> t_exp OR exp .)
    CORCHETEDER     reduce using rule 95 (exp -> t_exp OR exp .)
    TO              reduce using rule 95 (exp -> t_exp OR exp .)
    DO              reduce using rule 95 (exp -> t_exp OR exp .)


state 181

    (97) t_exp -> g_exp AND t_exp .

    OR              reduce using rule 97 (t_exp -> g_exp AND t_exp .)
    PUNTOCOMA       reduce using rule 97 (t_exp -> g_exp AND t_exp .)
    COMA            reduce using rule 97 (t_exp -> g_exp AND t_exp .)
    PARENTESISDER   reduce using rule 97 (t_exp -> g_exp AND t_exp .)
    CORCHETEDER     reduce using rule 97 (t_exp -> g_exp AND t_exp .)
    TO              reduce using rule 97 (t_exp -> g_exp AND t_exp .)
    DO              reduce using rule 97 (t_exp -> g_exp AND t_exp .)


state 182

    (99) g_exp -> m_exp EQUAL m_exp .

    AND             reduce using rule 99 (g_exp -> m_exp EQUAL m_exp .)
    OR              reduce using rule 99 (g_exp -> m_exp EQUAL m_exp .)
    PUNTOCOMA       reduce using rule 99 (g_exp -> m_exp EQUAL m_exp .)
    COMA            reduce using rule 99 (g_exp -> m_exp EQUAL m_exp .)
    PARENTESISDER   reduce using rule 99 (g_exp -> m_exp EQUAL m_exp .)
    CORCHETEDER     reduce using rule 99 (g_exp -> m_exp EQUAL m_exp .)
    TO              reduce using rule 99 (g_exp -> m_exp EQUAL m_exp .)
    DO              reduce using rule 99 (g_exp -> m_exp EQUAL m_exp .)


state 183

    (100) g_exp -> m_exp NOT m_exp .

    AND             reduce using rule 100 (g_exp -> m_exp NOT m_exp .)
    OR              reduce using rule 100 (g_exp -> m_exp NOT m_exp .)
    PUNTOCOMA       reduce using rule 100 (g_exp -> m_exp NOT m_exp .)
    COMA            reduce using rule 100 (g_exp -> m_exp NOT m_exp .)
    PARENTESISDER   reduce using rule 100 (g_exp -> m_exp NOT m_exp .)
    CORCHETEDER     reduce using rule 100 (g_exp -> m_exp NOT m_exp .)
    TO              reduce using rule 100 (g_exp -> m_exp NOT m_exp .)
    DO              reduce using rule 100 (g_exp -> m_exp NOT m_exp .)


state 184

    (101) g_exp -> m_exp GREATERTHAN m_exp .

    AND             reduce using rule 101 (g_exp -> m_exp GREATERTHAN m_exp .)
    OR              reduce using rule 101 (g_exp -> m_exp GREATERTHAN m_exp .)
    PUNTOCOMA       reduce using rule 101 (g_exp -> m_exp GREATERTHAN m_exp .)
    COMA            reduce using rule 101 (g_exp -> m_exp GREATERTHAN m_exp .)
    PARENTESISDER   reduce using rule 101 (g_exp -> m_exp GREATERTHAN m_exp .)
    CORCHETEDER     reduce using rule 101 (g_exp -> m_exp GREATERTHAN m_exp .)
    TO              reduce using rule 101 (g_exp -> m_exp GREATERTHAN m_exp .)
    DO              reduce using rule 101 (g_exp -> m_exp GREATERTHAN m_exp .)


state 185

    (102) g_exp -> m_exp LESSTHAN m_exp .

    AND             reduce using rule 102 (g_exp -> m_exp LESSTHAN m_exp .)
    OR              reduce using rule 102 (g_exp -> m_exp LESSTHAN m_exp .)
    PUNTOCOMA       reduce using rule 102 (g_exp -> m_exp LESSTHAN m_exp .)
    COMA            reduce using rule 102 (g_exp -> m_exp LESSTHAN m_exp .)
    PARENTESISDER   reduce using rule 102 (g_exp -> m_exp LESSTHAN m_exp .)
    CORCHETEDER     reduce using rule 102 (g_exp -> m_exp LESSTHAN m_exp .)
    TO              reduce using rule 102 (g_exp -> m_exp LESSTHAN m_exp .)
    DO              reduce using rule 102 (g_exp -> m_exp LESSTHAN m_exp .)


state 186

    (104) m_exp -> t MAS m_exp .

    EQUAL           reduce using rule 104 (m_exp -> t MAS m_exp .)
    NOT             reduce using rule 104 (m_exp -> t MAS m_exp .)
    GREATERTHAN     reduce using rule 104 (m_exp -> t MAS m_exp .)
    LESSTHAN        reduce using rule 104 (m_exp -> t MAS m_exp .)
    AND             reduce using rule 104 (m_exp -> t MAS m_exp .)
    OR              reduce using rule 104 (m_exp -> t MAS m_exp .)
    PUNTOCOMA       reduce using rule 104 (m_exp -> t MAS m_exp .)
    COMA            reduce using rule 104 (m_exp -> t MAS m_exp .)
    PARENTESISDER   reduce using rule 104 (m_exp -> t MAS m_exp .)
    CORCHETEDER     reduce using rule 104 (m_exp -> t MAS m_exp .)
    TO              reduce using rule 104 (m_exp -> t MAS m_exp .)
    DO              reduce using rule 104 (m_exp -> t MAS m_exp .)


state 187

    (105) m_exp -> t MENOS m_exp .

    EQUAL           reduce using rule 105 (m_exp -> t MENOS m_exp .)
    NOT             reduce using rule 105 (m_exp -> t MENOS m_exp .)
    GREATERTHAN     reduce using rule 105 (m_exp -> t MENOS m_exp .)
    LESSTHAN        reduce using rule 105 (m_exp -> t MENOS m_exp .)
    AND             reduce using rule 105 (m_exp -> t MENOS m_exp .)
    OR              reduce using rule 105 (m_exp -> t MENOS m_exp .)
    PUNTOCOMA       reduce using rule 105 (m_exp -> t MENOS m_exp .)
    COMA            reduce using rule 105 (m_exp -> t MENOS m_exp .)
    PARENTESISDER   reduce using rule 105 (m_exp -> t MENOS m_exp .)
    CORCHETEDER     reduce using rule 105 (m_exp -> t MENOS m_exp .)
    TO              reduce using rule 105 (m_exp -> t MENOS m_exp .)
    DO              reduce using rule 105 (m_exp -> t MENOS m_exp .)


state 188

    (107) t -> f POR t .

    MAS             reduce using rule 107 (t -> f POR t .)
    MENOS           reduce using rule 107 (t -> f POR t .)
    EQUAL           reduce using rule 107 (t -> f POR t .)
    NOT             reduce using rule 107 (t -> f POR t .)
    GREATERTHAN     reduce using rule 107 (t -> f POR t .)
    LESSTHAN        reduce using rule 107 (t -> f POR t .)
    AND             reduce using rule 107 (t -> f POR t .)
    OR              reduce using rule 107 (t -> f POR t .)
    PUNTOCOMA       reduce using rule 107 (t -> f POR t .)
    COMA            reduce using rule 107 (t -> f POR t .)
    PARENTESISDER   reduce using rule 107 (t -> f POR t .)
    CORCHETEDER     reduce using rule 107 (t -> f POR t .)
    TO              reduce using rule 107 (t -> f POR t .)
    DO              reduce using rule 107 (t -> f POR t .)


state 189

    (108) t -> f DIV t .

    MAS             reduce using rule 108 (t -> f DIV t .)
    MENOS           reduce using rule 108 (t -> f DIV t .)
    EQUAL           reduce using rule 108 (t -> f DIV t .)
    NOT             reduce using rule 108 (t -> f DIV t .)
    GREATERTHAN     reduce using rule 108 (t -> f DIV t .)
    LESSTHAN        reduce using rule 108 (t -> f DIV t .)
    AND             reduce using rule 108 (t -> f DIV t .)
    OR              reduce using rule 108 (t -> f DIV t .)
    PUNTOCOMA       reduce using rule 108 (t -> f DIV t .)
    COMA            reduce using rule 108 (t -> f DIV t .)
    PARENTESISDER   reduce using rule 108 (t -> f DIV t .)
    CORCHETEDER     reduce using rule 108 (t -> f DIV t .)
    TO              reduce using rule 108 (t -> f DIV t .)
    DO              reduce using rule 108 (t -> f DIV t .)


state 190

    (109) f -> PARENTESISIZQ exp PARENTESISDER .

    POR             reduce using rule 109 (f -> PARENTESISIZQ exp PARENTESISDER .)
    DIV             reduce using rule 109 (f -> PARENTESISIZQ exp PARENTESISDER .)
    MAS             reduce using rule 109 (f -> PARENTESISIZQ exp PARENTESISDER .)
    MENOS           reduce using rule 109 (f -> PARENTESISIZQ exp PARENTESISDER .)
    EQUAL           reduce using rule 109 (f -> PARENTESISIZQ exp PARENTESISDER .)
    NOT             reduce using rule 109 (f -> PARENTESISIZQ exp PARENTESISDER .)
    GREATERTHAN     reduce using rule 109 (f -> PARENTESISIZQ exp PARENTESISDER .)
    LESSTHAN        reduce using rule 109 (f -> PARENTESISIZQ exp PARENTESISDER .)
    AND             reduce using rule 109 (f -> PARENTESISIZQ exp PARENTESISDER .)
    OR              reduce using rule 109 (f -> PARENTESISIZQ exp PARENTESISDER .)
    PUNTOCOMA       reduce using rule 109 (f -> PARENTESISIZQ exp PARENTESISDER .)
    COMA            reduce using rule 109 (f -> PARENTESISIZQ exp PARENTESISDER .)
    PARENTESISDER   reduce using rule 109 (f -> PARENTESISIZQ exp PARENTESISDER .)
    CORCHETEDER     reduce using rule 109 (f -> PARENTESISIZQ exp PARENTESISDER .)
    TO              reduce using rule 109 (f -> PARENTESISIZQ exp PARENTESISDER .)
    DO              reduce using rule 109 (f -> PARENTESISIZQ exp PARENTESISDER .)


state 191

    (78) llamadap -> exp COMA llamadap .

    PARENTESISDER   reduce using rule 78 (llamadap -> exp COMA llamadap .)


state 192

    (84) variable -> ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ . exp CORCHETEDER
    (94) exp -> . t_exp
    (95) exp -> . t_exp OR exp
    (96) t_exp -> . g_exp
    (97) t_exp -> . g_exp AND t_exp
    (98) g_exp -> . m_exp
    (99) g_exp -> . m_exp EQUAL m_exp
    (100) g_exp -> . m_exp NOT m_exp
    (101) g_exp -> . m_exp GREATERTHAN m_exp
    (102) g_exp -> . m_exp LESSTHAN m_exp
    (103) m_exp -> . t
    (104) m_exp -> . t MAS m_exp
    (105) m_exp -> . t MENOS m_exp
    (106) t -> . f
    (107) t -> . f POR t
    (108) t -> . f DIV t
    (109) f -> . PARENTESISIZQ exp PARENTESISDER
    (110) f -> . CTEI
    (111) f -> . CTEF
    (112) f -> . CTECH
    (113) f -> . variable
    (114) f -> . llamada
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER

    PARENTESISIZQ   shift and go to state 118
    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTECH           shift and go to state 121
    ID              shift and go to state 123

    exp                            shift and go to state 212
    t_exp                          shift and go to state 113
    g_exp                          shift and go to state 114
    m_exp                          shift and go to state 115
    t                              shift and go to state 116
    f                              shift and go to state 117
    variable                       shift and go to state 111
    llamada                        shift and go to state 122

state 193

    (81) leep -> variable COMA leep .

    PARENTESISDER   reduce using rule 81 (leep -> variable COMA leep .)


state 194

    (87) escribep -> exp COMA escribep .

    PARENTESISDER   reduce using rule 87 (escribep -> exp COMA escribep .)


state 195

    (89) escribep -> LETRERO COMA escribep .

    PARENTESISDER   reduce using rule 89 (escribep -> LETRERO COMA escribep .)


state 196

    (90) condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ . estatuto LLAVEDER
    (91) condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ . estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER
    (61) estatuto -> . asignacion PUNTOCOMA
    (62) estatuto -> . asignacion PUNTOCOMA estatuto
    (63) estatuto -> . llamada PUNTOCOMA
    (64) estatuto -> . llamada PUNTOCOMA estatuto
    (65) estatuto -> . lee PUNTOCOMA
    (66) estatuto -> . lee PUNTOCOMA estatuto
    (67) estatuto -> . escribe PUNTOCOMA
    (68) estatuto -> . escribe PUNTOCOMA estatuto
    (69) estatuto -> . condicion
    (70) estatuto -> . condicion estatuto
    (71) estatuto -> . ciclo_w
    (72) estatuto -> . ciclo_w estatuto
    (73) estatuto -> . ciclo_f
    (74) estatuto -> . ciclo_f estatuto
    (75) asignacion -> . variable IGUAL exp
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER
    (79) lee -> . READ PARENTESISIZQ leep PARENTESISDER
    (85) escribe -> . WRITE PARENTESISIZQ escribep PARENTESISDER
    (90) condicion -> . IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER
    (91) condicion -> . IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER
    (92) ciclo_w -> . WHILE PARENTESISIZQ exp PARENTESISDER DO LLAVEIZQ estatuto LLAVEDER
    (93) ciclo_f -> . FROM variable IGUAL exp TO exp DO LLAVEIZQ estatuto LLAVEDER
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER

    ID              shift and go to state 65
    READ            shift and go to state 66
    WRITE           shift and go to state 67
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    FROM            shift and go to state 70

    estatuto                       shift and go to state 213
    asignacion                     shift and go to state 57
    llamada                        shift and go to state 58
    lee                            shift and go to state 59
    escribe                        shift and go to state 60
    condicion                      shift and go to state 61
    ciclo_w                        shift and go to state 62
    ciclo_f                        shift and go to state 63
    variable                       shift and go to state 64

state 197

    (92) ciclo_w -> WHILE PARENTESISIZQ exp PARENTESISDER DO . LLAVEIZQ estatuto LLAVEDER

    LLAVEIZQ        shift and go to state 214


state 198

    (93) ciclo_f -> FROM variable IGUAL exp TO . exp DO LLAVEIZQ estatuto LLAVEDER
    (94) exp -> . t_exp
    (95) exp -> . t_exp OR exp
    (96) t_exp -> . g_exp
    (97) t_exp -> . g_exp AND t_exp
    (98) g_exp -> . m_exp
    (99) g_exp -> . m_exp EQUAL m_exp
    (100) g_exp -> . m_exp NOT m_exp
    (101) g_exp -> . m_exp GREATERTHAN m_exp
    (102) g_exp -> . m_exp LESSTHAN m_exp
    (103) m_exp -> . t
    (104) m_exp -> . t MAS m_exp
    (105) m_exp -> . t MENOS m_exp
    (106) t -> . f
    (107) t -> . f POR t
    (108) t -> . f DIV t
    (109) f -> . PARENTESISIZQ exp PARENTESISDER
    (110) f -> . CTEI
    (111) f -> . CTEF
    (112) f -> . CTECH
    (113) f -> . variable
    (114) f -> . llamada
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER

    PARENTESISIZQ   shift and go to state 118
    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTECH           shift and go to state 121
    ID              shift and go to state 123

    variable                       shift and go to state 111
    exp                            shift and go to state 215
    t_exp                          shift and go to state 113
    g_exp                          shift and go to state 114
    m_exp                          shift and go to state 115
    t                              shift and go to state 116
    f                              shift and go to state 117
    llamada                        shift and go to state 122

state 199

    (11) clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA .
    (12) clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA . clase
    (11) clase -> . CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA
    (12) clase -> . CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA clase
    (13) clase -> . CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ LLAVEDER PUNTOCOMA
    (14) clase -> . CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ LLAVEDER PUNTOCOMA clase
    (15) clase -> . CLASS ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA
    (16) clase -> . CLASS ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA clase
    (17) clase -> . CLASS ID LLAVEIZQ LLAVEDER PUNTOCOMA
    (18) clase -> . CLASS ID LLAVEIZQ LLAVEDER PUNTOCOMA clase

    MAIN            reduce using rule 11 (clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA .)
    VAR             reduce using rule 11 (clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA .)
    FUNC            reduce using rule 11 (clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA .)
    CLASS           shift and go to state 10

    clase                          shift and go to state 216

state 200

    (14) clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ LLAVEDER PUNTOCOMA clase .

    MAIN            reduce using rule 14 (clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ LLAVEDER PUNTOCOMA clase .)
    VAR             reduce using rule 14 (clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ LLAVEDER PUNTOCOMA clase .)
    FUNC            reduce using rule 14 (clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ LLAVEDER PUNTOCOMA clase .)


state 201

    (54) bloque_clase -> ATTRIBUTE DOSPUNTOS atributo METHOD DOSPUNTOS metodo .

    LLAVEDER        reduce using rule 54 (bloque_clase -> ATTRIBUTE DOSPUNTOS atributo METHOD DOSPUNTOS metodo .)


state 202

    (57) metodo -> tipo_clase . tipo_simple ID PARENTESISIZQ parametros PARENTESISDER cuerpo
    (58) metodo -> tipo_clase . tipo_simple ID PARENTESISIZQ parametros PARENTESISDER cuerpo metodo
    (59) metodo -> tipo_clase . VOID ID PARENTESISIZQ parametros PARENTESISDER cuerpo
    (60) metodo -> tipo_clase . VOID ID PARENTESISIZQ parametros PARENTESISDER cuerpo metodo
    (31) tipo_simple -> . INT
    (32) tipo_simple -> . FLOAT
    (33) tipo_simple -> . CHAR

    VOID            shift and go to state 218
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27

    tipo_simple                    shift and go to state 217

state 203

    (55) atributo -> tipo_clase tipo_simple ID PUNTOCOMA .
    (56) atributo -> tipo_clase tipo_simple ID PUNTOCOMA . atributo
    (55) atributo -> . tipo_clase tipo_simple ID PUNTOCOMA
    (56) atributo -> . tipo_clase tipo_simple ID PUNTOCOMA atributo
    (19) tipo_clase -> . PUBLIC
    (20) tipo_clase -> . PROTECTED
    (21) tipo_clase -> . PRIVATE

    METHOD          reduce using rule 55 (atributo -> tipo_clase tipo_simple ID PUNTOCOMA .)
    PUBLIC          shift and go to state 44
    PROTECTED       shift and go to state 45
    PRIVATE         shift and go to state 46

    tipo_clase                     shift and go to state 102
    atributo                       shift and go to state 219

state 204

    (29) varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER . PUNTOCOMA
    (30) varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER . PUNTOCOMA varp

    PUNTOCOMA       shift and go to state 220


state 205

    (35) funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo .
    (36) funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo . funcion
    (35) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo
    (36) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
    (37) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo
    (38) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion
    (39) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo
    (40) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
    (41) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo
    (42) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion

    MAIN            reduce using rule 35 (funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo .)
    FUNC            shift and go to state 12

    funcion                        shift and go to state 221

state 206

    (38) funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion .

    MAIN            reduce using rule 38 (funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion .)


state 207

    (43) dec_var -> VAR dec_varp .

    LLAVEIZQ        reduce using rule 43 (dec_var -> VAR dec_varp .)


state 208

    (44) dec_varp -> tipo_simple . ID PUNTOCOMA dec_varp
    (45) dec_varp -> tipo_simple . ID PUNTOCOMA
    (46) dec_varp -> tipo_simple . ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA dec_varp
    (47) dec_varp -> tipo_simple . ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
    (48) dec_varp -> tipo_simple . ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA dec_varp
    (49) dec_varp -> tipo_simple . ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA

    ID              shift and go to state 222


state 209

    (52) cuerpo -> LLAVEIZQ estatuto . RETURN exp PUNTOCOMA LLAVEDER
    (53) cuerpo -> LLAVEIZQ estatuto . LLAVEDER

    RETURN          shift and go to state 223
    LLAVEDER        shift and go to state 224


state 210

    (39) funcion -> FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo .
    (40) funcion -> FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo . funcion
    (35) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo
    (36) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
    (37) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo
    (38) funcion -> . FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion
    (39) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo
    (40) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion
    (41) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo
    (42) funcion -> . FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion

    MAIN            reduce using rule 39 (funcion -> FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo .)
    FUNC            shift and go to state 12

    funcion                        shift and go to state 225

state 211

    (42) funcion -> FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion .

    MAIN            reduce using rule 42 (funcion -> FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA cuerpo funcion .)


state 212

    (84) variable -> ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp . CORCHETEDER

    CORCHETEDER     shift and go to state 226


state 213

    (90) condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto . LLAVEDER
    (91) condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto . LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER

    LLAVEDER        shift and go to state 227


state 214

    (92) ciclo_w -> WHILE PARENTESISIZQ exp PARENTESISDER DO LLAVEIZQ . estatuto LLAVEDER
    (61) estatuto -> . asignacion PUNTOCOMA
    (62) estatuto -> . asignacion PUNTOCOMA estatuto
    (63) estatuto -> . llamada PUNTOCOMA
    (64) estatuto -> . llamada PUNTOCOMA estatuto
    (65) estatuto -> . lee PUNTOCOMA
    (66) estatuto -> . lee PUNTOCOMA estatuto
    (67) estatuto -> . escribe PUNTOCOMA
    (68) estatuto -> . escribe PUNTOCOMA estatuto
    (69) estatuto -> . condicion
    (70) estatuto -> . condicion estatuto
    (71) estatuto -> . ciclo_w
    (72) estatuto -> . ciclo_w estatuto
    (73) estatuto -> . ciclo_f
    (74) estatuto -> . ciclo_f estatuto
    (75) asignacion -> . variable IGUAL exp
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER
    (79) lee -> . READ PARENTESISIZQ leep PARENTESISDER
    (85) escribe -> . WRITE PARENTESISIZQ escribep PARENTESISDER
    (90) condicion -> . IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER
    (91) condicion -> . IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER
    (92) ciclo_w -> . WHILE PARENTESISIZQ exp PARENTESISDER DO LLAVEIZQ estatuto LLAVEDER
    (93) ciclo_f -> . FROM variable IGUAL exp TO exp DO LLAVEIZQ estatuto LLAVEDER
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER

    ID              shift and go to state 65
    READ            shift and go to state 66
    WRITE           shift and go to state 67
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    FROM            shift and go to state 70

    estatuto                       shift and go to state 228
    asignacion                     shift and go to state 57
    llamada                        shift and go to state 58
    lee                            shift and go to state 59
    escribe                        shift and go to state 60
    condicion                      shift and go to state 61
    ciclo_w                        shift and go to state 62
    ciclo_f                        shift and go to state 63
    variable                       shift and go to state 64

state 215

    (93) ciclo_f -> FROM variable IGUAL exp TO exp . DO LLAVEIZQ estatuto LLAVEDER

    DO              shift and go to state 229


state 216

    (12) clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA clase .

    MAIN            reduce using rule 12 (clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA clase .)
    VAR             reduce using rule 12 (clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA clase .)
    FUNC            reduce using rule 12 (clase -> CLASS ID DOSPUNTOS tipo_clase ID LLAVEIZQ bloque_clase LLAVEDER PUNTOCOMA clase .)


state 217

    (57) metodo -> tipo_clase tipo_simple . ID PARENTESISIZQ parametros PARENTESISDER cuerpo
    (58) metodo -> tipo_clase tipo_simple . ID PARENTESISIZQ parametros PARENTESISDER cuerpo metodo

    ID              shift and go to state 230


state 218

    (59) metodo -> tipo_clase VOID . ID PARENTESISIZQ parametros PARENTESISDER cuerpo
    (60) metodo -> tipo_clase VOID . ID PARENTESISIZQ parametros PARENTESISDER cuerpo metodo

    ID              shift and go to state 231


state 219

    (56) atributo -> tipo_clase tipo_simple ID PUNTOCOMA atributo .

    METHOD          reduce using rule 56 (atributo -> tipo_clase tipo_simple ID PUNTOCOMA atributo .)


state 220

    (29) varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA .
    (30) varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA . varp
    (23) varp -> . tipo_compuesto ID PUNTOCOMA
    (24) varp -> . tipo_compuesto ID PUNTOCOMA varp
    (25) varp -> . tipo_simple ID PUNTOCOMA
    (26) varp -> . tipo_simple ID PUNTOCOMA varp
    (27) varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
    (28) varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA varp
    (29) varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
    (30) varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA varp
    (34) tipo_compuesto -> . ID
    (31) tipo_simple -> . INT
    (32) tipo_simple -> . FLOAT
    (33) tipo_simple -> . CHAR

    MAIN            reduce using rule 29 (varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA .)
    FUNC            reduce using rule 29 (varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA .)
    ID              shift and go to state 23
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27

    tipo_simple                    shift and go to state 24
    varp                           shift and go to state 232
    tipo_compuesto                 shift and go to state 22

state 221

    (36) funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion .

    MAIN            reduce using rule 36 (funcion -> FUNC tipo_simple ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion .)


state 222

    (44) dec_varp -> tipo_simple ID . PUNTOCOMA dec_varp
    (45) dec_varp -> tipo_simple ID . PUNTOCOMA
    (46) dec_varp -> tipo_simple ID . CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA dec_varp
    (47) dec_varp -> tipo_simple ID . CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
    (48) dec_varp -> tipo_simple ID . CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA dec_varp
    (49) dec_varp -> tipo_simple ID . CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA

    PUNTOCOMA       shift and go to state 233
    CORCHETEIZQ     shift and go to state 234


state 223

    (52) cuerpo -> LLAVEIZQ estatuto RETURN . exp PUNTOCOMA LLAVEDER
    (94) exp -> . t_exp
    (95) exp -> . t_exp OR exp
    (96) t_exp -> . g_exp
    (97) t_exp -> . g_exp AND t_exp
    (98) g_exp -> . m_exp
    (99) g_exp -> . m_exp EQUAL m_exp
    (100) g_exp -> . m_exp NOT m_exp
    (101) g_exp -> . m_exp GREATERTHAN m_exp
    (102) g_exp -> . m_exp LESSTHAN m_exp
    (103) m_exp -> . t
    (104) m_exp -> . t MAS m_exp
    (105) m_exp -> . t MENOS m_exp
    (106) t -> . f
    (107) t -> . f POR t
    (108) t -> . f DIV t
    (109) f -> . PARENTESISIZQ exp PARENTESISDER
    (110) f -> . CTEI
    (111) f -> . CTEF
    (112) f -> . CTECH
    (113) f -> . variable
    (114) f -> . llamada
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER

    PARENTESISIZQ   shift and go to state 118
    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTECH           shift and go to state 121
    ID              shift and go to state 123

    exp                            shift and go to state 235
    t_exp                          shift and go to state 113
    g_exp                          shift and go to state 114
    m_exp                          shift and go to state 115
    t                              shift and go to state 116
    f                              shift and go to state 117
    variable                       shift and go to state 111
    llamada                        shift and go to state 122

state 224

    (53) cuerpo -> LLAVEIZQ estatuto LLAVEDER .

    FUNC            reduce using rule 53 (cuerpo -> LLAVEIZQ estatuto LLAVEDER .)
    MAIN            reduce using rule 53 (cuerpo -> LLAVEIZQ estatuto LLAVEDER .)
    PUBLIC          reduce using rule 53 (cuerpo -> LLAVEIZQ estatuto LLAVEDER .)
    PROTECTED       reduce using rule 53 (cuerpo -> LLAVEIZQ estatuto LLAVEDER .)
    PRIVATE         reduce using rule 53 (cuerpo -> LLAVEIZQ estatuto LLAVEDER .)
    LLAVEDER        reduce using rule 53 (cuerpo -> LLAVEIZQ estatuto LLAVEDER .)


state 225

    (40) funcion -> FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion .

    MAIN            reduce using rule 40 (funcion -> FUNC VOID ID PARENTESISIZQ parametros PARENTESISDER PUNTOCOMA dec_var cuerpo funcion .)


state 226

    (84) variable -> ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER .

    IGUAL           reduce using rule 84 (variable -> ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER .)
    POR             reduce using rule 84 (variable -> ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER .)
    DIV             reduce using rule 84 (variable -> ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER .)
    MAS             reduce using rule 84 (variable -> ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER .)
    MENOS           reduce using rule 84 (variable -> ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER .)
    EQUAL           reduce using rule 84 (variable -> ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER .)
    NOT             reduce using rule 84 (variable -> ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER .)
    GREATERTHAN     reduce using rule 84 (variable -> ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER .)
    LESSTHAN        reduce using rule 84 (variable -> ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER .)
    AND             reduce using rule 84 (variable -> ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER .)
    OR              reduce using rule 84 (variable -> ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER .)
    PUNTOCOMA       reduce using rule 84 (variable -> ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER .)
    COMA            reduce using rule 84 (variable -> ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER .)
    PARENTESISDER   reduce using rule 84 (variable -> ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER .)
    CORCHETEDER     reduce using rule 84 (variable -> ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER .)
    TO              reduce using rule 84 (variable -> ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER .)
    DO              reduce using rule 84 (variable -> ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER .)


state 227

    (90) condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER .
    (91) condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER . ELSE LLAVEIZQ estatuto LLAVEDER

    ID              reduce using rule 90 (condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER .)
    READ            reduce using rule 90 (condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER .)
    WRITE           reduce using rule 90 (condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER .)
    IF              reduce using rule 90 (condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER .)
    WHILE           reduce using rule 90 (condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER .)
    FROM            reduce using rule 90 (condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER .)
    LLAVEDER        reduce using rule 90 (condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER .)
    RETURN          reduce using rule 90 (condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER .)
    ELSE            shift and go to state 236


state 228

    (92) ciclo_w -> WHILE PARENTESISIZQ exp PARENTESISDER DO LLAVEIZQ estatuto . LLAVEDER

    LLAVEDER        shift and go to state 237


state 229

    (93) ciclo_f -> FROM variable IGUAL exp TO exp DO . LLAVEIZQ estatuto LLAVEDER

    LLAVEIZQ        shift and go to state 238


state 230

    (57) metodo -> tipo_clase tipo_simple ID . PARENTESISIZQ parametros PARENTESISDER cuerpo
    (58) metodo -> tipo_clase tipo_simple ID . PARENTESISIZQ parametros PARENTESISDER cuerpo metodo

    PARENTESISIZQ   shift and go to state 239


state 231

    (59) metodo -> tipo_clase VOID ID . PARENTESISIZQ parametros PARENTESISDER cuerpo
    (60) metodo -> tipo_clase VOID ID . PARENTESISIZQ parametros PARENTESISDER cuerpo metodo

    PARENTESISIZQ   shift and go to state 240


state 232

    (30) varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA varp .

    MAIN            reduce using rule 30 (varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA varp .)
    FUNC            reduce using rule 30 (varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA varp .)


state 233

    (44) dec_varp -> tipo_simple ID PUNTOCOMA . dec_varp
    (45) dec_varp -> tipo_simple ID PUNTOCOMA .
    (44) dec_varp -> . tipo_simple ID PUNTOCOMA dec_varp
    (45) dec_varp -> . tipo_simple ID PUNTOCOMA
    (46) dec_varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA dec_varp
    (47) dec_varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
    (48) dec_varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA dec_varp
    (49) dec_varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
    (31) tipo_simple -> . INT
    (32) tipo_simple -> . FLOAT
    (33) tipo_simple -> . CHAR

    LLAVEIZQ        reduce using rule 45 (dec_varp -> tipo_simple ID PUNTOCOMA .)
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27

    tipo_simple                    shift and go to state 208
    dec_varp                       shift and go to state 241

state 234

    (46) dec_varp -> tipo_simple ID CORCHETEIZQ . CTEI CORCHETEDER PUNTOCOMA dec_varp
    (47) dec_varp -> tipo_simple ID CORCHETEIZQ . CTEI CORCHETEDER PUNTOCOMA
    (48) dec_varp -> tipo_simple ID CORCHETEIZQ . CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA dec_varp
    (49) dec_varp -> tipo_simple ID CORCHETEIZQ . CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA

    CTEI            shift and go to state 242


state 235

    (52) cuerpo -> LLAVEIZQ estatuto RETURN exp . PUNTOCOMA LLAVEDER

    PUNTOCOMA       shift and go to state 243


state 236

    (91) condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE . LLAVEIZQ estatuto LLAVEDER

    LLAVEIZQ        shift and go to state 244


state 237

    (92) ciclo_w -> WHILE PARENTESISIZQ exp PARENTESISDER DO LLAVEIZQ estatuto LLAVEDER .

    ID              reduce using rule 92 (ciclo_w -> WHILE PARENTESISIZQ exp PARENTESISDER DO LLAVEIZQ estatuto LLAVEDER .)
    READ            reduce using rule 92 (ciclo_w -> WHILE PARENTESISIZQ exp PARENTESISDER DO LLAVEIZQ estatuto LLAVEDER .)
    WRITE           reduce using rule 92 (ciclo_w -> WHILE PARENTESISIZQ exp PARENTESISDER DO LLAVEIZQ estatuto LLAVEDER .)
    IF              reduce using rule 92 (ciclo_w -> WHILE PARENTESISIZQ exp PARENTESISDER DO LLAVEIZQ estatuto LLAVEDER .)
    WHILE           reduce using rule 92 (ciclo_w -> WHILE PARENTESISIZQ exp PARENTESISDER DO LLAVEIZQ estatuto LLAVEDER .)
    FROM            reduce using rule 92 (ciclo_w -> WHILE PARENTESISIZQ exp PARENTESISDER DO LLAVEIZQ estatuto LLAVEDER .)
    LLAVEDER        reduce using rule 92 (ciclo_w -> WHILE PARENTESISIZQ exp PARENTESISDER DO LLAVEIZQ estatuto LLAVEDER .)
    RETURN          reduce using rule 92 (ciclo_w -> WHILE PARENTESISIZQ exp PARENTESISDER DO LLAVEIZQ estatuto LLAVEDER .)


state 238

    (93) ciclo_f -> FROM variable IGUAL exp TO exp DO LLAVEIZQ . estatuto LLAVEDER
    (61) estatuto -> . asignacion PUNTOCOMA
    (62) estatuto -> . asignacion PUNTOCOMA estatuto
    (63) estatuto -> . llamada PUNTOCOMA
    (64) estatuto -> . llamada PUNTOCOMA estatuto
    (65) estatuto -> . lee PUNTOCOMA
    (66) estatuto -> . lee PUNTOCOMA estatuto
    (67) estatuto -> . escribe PUNTOCOMA
    (68) estatuto -> . escribe PUNTOCOMA estatuto
    (69) estatuto -> . condicion
    (70) estatuto -> . condicion estatuto
    (71) estatuto -> . ciclo_w
    (72) estatuto -> . ciclo_w estatuto
    (73) estatuto -> . ciclo_f
    (74) estatuto -> . ciclo_f estatuto
    (75) asignacion -> . variable IGUAL exp
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER
    (79) lee -> . READ PARENTESISIZQ leep PARENTESISDER
    (85) escribe -> . WRITE PARENTESISIZQ escribep PARENTESISDER
    (90) condicion -> . IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER
    (91) condicion -> . IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER
    (92) ciclo_w -> . WHILE PARENTESISIZQ exp PARENTESISDER DO LLAVEIZQ estatuto LLAVEDER
    (93) ciclo_f -> . FROM variable IGUAL exp TO exp DO LLAVEIZQ estatuto LLAVEDER
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER

    ID              shift and go to state 65
    READ            shift and go to state 66
    WRITE           shift and go to state 67
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    FROM            shift and go to state 70

    variable                       shift and go to state 64
    estatuto                       shift and go to state 245
    asignacion                     shift and go to state 57
    llamada                        shift and go to state 58
    lee                            shift and go to state 59
    escribe                        shift and go to state 60
    condicion                      shift and go to state 61
    ciclo_w                        shift and go to state 62
    ciclo_f                        shift and go to state 63

state 239

    (57) metodo -> tipo_clase tipo_simple ID PARENTESISIZQ . parametros PARENTESISDER cuerpo
    (58) metodo -> tipo_clase tipo_simple ID PARENTESISIZQ . parametros PARENTESISDER cuerpo metodo
    (50) parametros -> . tipo_simple ID
    (51) parametros -> . tipo_simple ID COMA parametros
    (31) tipo_simple -> . INT
    (32) tipo_simple -> . FLOAT
    (33) tipo_simple -> . CHAR

    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27

    tipo_simple                    shift and go to state 78
    parametros                     shift and go to state 246

state 240

    (59) metodo -> tipo_clase VOID ID PARENTESISIZQ . parametros PARENTESISDER cuerpo
    (60) metodo -> tipo_clase VOID ID PARENTESISIZQ . parametros PARENTESISDER cuerpo metodo
    (50) parametros -> . tipo_simple ID
    (51) parametros -> . tipo_simple ID COMA parametros
    (31) tipo_simple -> . INT
    (32) tipo_simple -> . FLOAT
    (33) tipo_simple -> . CHAR

    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27

    parametros                     shift and go to state 247
    tipo_simple                    shift and go to state 78

state 241

    (44) dec_varp -> tipo_simple ID PUNTOCOMA dec_varp .

    LLAVEIZQ        reduce using rule 44 (dec_varp -> tipo_simple ID PUNTOCOMA dec_varp .)


state 242

    (46) dec_varp -> tipo_simple ID CORCHETEIZQ CTEI . CORCHETEDER PUNTOCOMA dec_varp
    (47) dec_varp -> tipo_simple ID CORCHETEIZQ CTEI . CORCHETEDER PUNTOCOMA
    (48) dec_varp -> tipo_simple ID CORCHETEIZQ CTEI . CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA dec_varp
    (49) dec_varp -> tipo_simple ID CORCHETEIZQ CTEI . CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA

    CORCHETEDER     shift and go to state 248


state 243

    (52) cuerpo -> LLAVEIZQ estatuto RETURN exp PUNTOCOMA . LLAVEDER

    LLAVEDER        shift and go to state 249


state 244

    (91) condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ . estatuto LLAVEDER
    (61) estatuto -> . asignacion PUNTOCOMA
    (62) estatuto -> . asignacion PUNTOCOMA estatuto
    (63) estatuto -> . llamada PUNTOCOMA
    (64) estatuto -> . llamada PUNTOCOMA estatuto
    (65) estatuto -> . lee PUNTOCOMA
    (66) estatuto -> . lee PUNTOCOMA estatuto
    (67) estatuto -> . escribe PUNTOCOMA
    (68) estatuto -> . escribe PUNTOCOMA estatuto
    (69) estatuto -> . condicion
    (70) estatuto -> . condicion estatuto
    (71) estatuto -> . ciclo_w
    (72) estatuto -> . ciclo_w estatuto
    (73) estatuto -> . ciclo_f
    (74) estatuto -> . ciclo_f estatuto
    (75) asignacion -> . variable IGUAL exp
    (76) llamada -> . ID PARENTESISIZQ llamadap PARENTESISDER
    (79) lee -> . READ PARENTESISIZQ leep PARENTESISDER
    (85) escribe -> . WRITE PARENTESISIZQ escribep PARENTESISDER
    (90) condicion -> . IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER
    (91) condicion -> . IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER
    (92) ciclo_w -> . WHILE PARENTESISIZQ exp PARENTESISDER DO LLAVEIZQ estatuto LLAVEDER
    (93) ciclo_f -> . FROM variable IGUAL exp TO exp DO LLAVEIZQ estatuto LLAVEDER
    (82) variable -> . ID
    (83) variable -> . ID CORCHETEIZQ exp CORCHETEDER
    (84) variable -> . ID CORCHETEIZQ exp CORCHETEDER CORCHETEIZQ exp CORCHETEDER

    ID              shift and go to state 65
    READ            shift and go to state 66
    WRITE           shift and go to state 67
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    FROM            shift and go to state 70

    estatuto                       shift and go to state 250
    asignacion                     shift and go to state 57
    llamada                        shift and go to state 58
    lee                            shift and go to state 59
    escribe                        shift and go to state 60
    condicion                      shift and go to state 61
    ciclo_w                        shift and go to state 62
    ciclo_f                        shift and go to state 63
    variable                       shift and go to state 64

state 245

    (93) ciclo_f -> FROM variable IGUAL exp TO exp DO LLAVEIZQ estatuto . LLAVEDER

    LLAVEDER        shift and go to state 251


state 246

    (57) metodo -> tipo_clase tipo_simple ID PARENTESISIZQ parametros . PARENTESISDER cuerpo
    (58) metodo -> tipo_clase tipo_simple ID PARENTESISIZQ parametros . PARENTESISDER cuerpo metodo

    PARENTESISDER   shift and go to state 252


state 247

    (59) metodo -> tipo_clase VOID ID PARENTESISIZQ parametros . PARENTESISDER cuerpo
    (60) metodo -> tipo_clase VOID ID PARENTESISIZQ parametros . PARENTESISDER cuerpo metodo

    PARENTESISDER   shift and go to state 253


state 248

    (46) dec_varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER . PUNTOCOMA dec_varp
    (47) dec_varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER . PUNTOCOMA
    (48) dec_varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER . CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA dec_varp
    (49) dec_varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER . CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA

    PUNTOCOMA       shift and go to state 255
    CORCHETEIZQ     shift and go to state 254


state 249

    (52) cuerpo -> LLAVEIZQ estatuto RETURN exp PUNTOCOMA LLAVEDER .

    FUNC            reduce using rule 52 (cuerpo -> LLAVEIZQ estatuto RETURN exp PUNTOCOMA LLAVEDER .)
    MAIN            reduce using rule 52 (cuerpo -> LLAVEIZQ estatuto RETURN exp PUNTOCOMA LLAVEDER .)
    PUBLIC          reduce using rule 52 (cuerpo -> LLAVEIZQ estatuto RETURN exp PUNTOCOMA LLAVEDER .)
    PROTECTED       reduce using rule 52 (cuerpo -> LLAVEIZQ estatuto RETURN exp PUNTOCOMA LLAVEDER .)
    PRIVATE         reduce using rule 52 (cuerpo -> LLAVEIZQ estatuto RETURN exp PUNTOCOMA LLAVEDER .)
    LLAVEDER        reduce using rule 52 (cuerpo -> LLAVEIZQ estatuto RETURN exp PUNTOCOMA LLAVEDER .)


state 250

    (91) condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto . LLAVEDER

    LLAVEDER        shift and go to state 256


state 251

    (93) ciclo_f -> FROM variable IGUAL exp TO exp DO LLAVEIZQ estatuto LLAVEDER .

    ID              reduce using rule 93 (ciclo_f -> FROM variable IGUAL exp TO exp DO LLAVEIZQ estatuto LLAVEDER .)
    READ            reduce using rule 93 (ciclo_f -> FROM variable IGUAL exp TO exp DO LLAVEIZQ estatuto LLAVEDER .)
    WRITE           reduce using rule 93 (ciclo_f -> FROM variable IGUAL exp TO exp DO LLAVEIZQ estatuto LLAVEDER .)
    IF              reduce using rule 93 (ciclo_f -> FROM variable IGUAL exp TO exp DO LLAVEIZQ estatuto LLAVEDER .)
    WHILE           reduce using rule 93 (ciclo_f -> FROM variable IGUAL exp TO exp DO LLAVEIZQ estatuto LLAVEDER .)
    FROM            reduce using rule 93 (ciclo_f -> FROM variable IGUAL exp TO exp DO LLAVEIZQ estatuto LLAVEDER .)
    LLAVEDER        reduce using rule 93 (ciclo_f -> FROM variable IGUAL exp TO exp DO LLAVEIZQ estatuto LLAVEDER .)
    RETURN          reduce using rule 93 (ciclo_f -> FROM variable IGUAL exp TO exp DO LLAVEIZQ estatuto LLAVEDER .)


state 252

    (57) metodo -> tipo_clase tipo_simple ID PARENTESISIZQ parametros PARENTESISDER . cuerpo
    (58) metodo -> tipo_clase tipo_simple ID PARENTESISIZQ parametros PARENTESISDER . cuerpo metodo
    (52) cuerpo -> . LLAVEIZQ estatuto RETURN exp PUNTOCOMA LLAVEDER
    (53) cuerpo -> . LLAVEIZQ estatuto LLAVEDER

    LLAVEIZQ        shift and go to state 177

    cuerpo                         shift and go to state 257

state 253

    (59) metodo -> tipo_clase VOID ID PARENTESISIZQ parametros PARENTESISDER . cuerpo
    (60) metodo -> tipo_clase VOID ID PARENTESISIZQ parametros PARENTESISDER . cuerpo metodo
    (52) cuerpo -> . LLAVEIZQ estatuto RETURN exp PUNTOCOMA LLAVEDER
    (53) cuerpo -> . LLAVEIZQ estatuto LLAVEDER

    LLAVEIZQ        shift and go to state 177

    cuerpo                         shift and go to state 258

state 254

    (48) dec_varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ . CTEI CORCHETEDER PUNTOCOMA dec_varp
    (49) dec_varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ . CTEI CORCHETEDER PUNTOCOMA

    CTEI            shift and go to state 259


state 255

    (46) dec_varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA . dec_varp
    (47) dec_varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA .
    (44) dec_varp -> . tipo_simple ID PUNTOCOMA dec_varp
    (45) dec_varp -> . tipo_simple ID PUNTOCOMA
    (46) dec_varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA dec_varp
    (47) dec_varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
    (48) dec_varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA dec_varp
    (49) dec_varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
    (31) tipo_simple -> . INT
    (32) tipo_simple -> . FLOAT
    (33) tipo_simple -> . CHAR

    LLAVEIZQ        reduce using rule 47 (dec_varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA .)
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27

    tipo_simple                    shift and go to state 208
    dec_varp                       shift and go to state 260

state 256

    (91) condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER .

    ID              reduce using rule 91 (condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER .)
    READ            reduce using rule 91 (condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER .)
    WRITE           reduce using rule 91 (condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER .)
    IF              reduce using rule 91 (condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER .)
    WHILE           reduce using rule 91 (condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER .)
    FROM            reduce using rule 91 (condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER .)
    LLAVEDER        reduce using rule 91 (condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER .)
    RETURN          reduce using rule 91 (condicion -> IF PARENTESISIZQ exp PARENTESISDER LLAVEIZQ estatuto LLAVEDER ELSE LLAVEIZQ estatuto LLAVEDER .)


state 257

    (57) metodo -> tipo_clase tipo_simple ID PARENTESISIZQ parametros PARENTESISDER cuerpo .
    (58) metodo -> tipo_clase tipo_simple ID PARENTESISIZQ parametros PARENTESISDER cuerpo . metodo
    (57) metodo -> . tipo_clase tipo_simple ID PARENTESISIZQ parametros PARENTESISDER cuerpo
    (58) metodo -> . tipo_clase tipo_simple ID PARENTESISIZQ parametros PARENTESISDER cuerpo metodo
    (59) metodo -> . tipo_clase VOID ID PARENTESISIZQ parametros PARENTESISDER cuerpo
    (60) metodo -> . tipo_clase VOID ID PARENTESISIZQ parametros PARENTESISDER cuerpo metodo
    (19) tipo_clase -> . PUBLIC
    (20) tipo_clase -> . PROTECTED
    (21) tipo_clase -> . PRIVATE

    LLAVEDER        reduce using rule 57 (metodo -> tipo_clase tipo_simple ID PARENTESISIZQ parametros PARENTESISDER cuerpo .)
    PUBLIC          shift and go to state 44
    PROTECTED       shift and go to state 45
    PRIVATE         shift and go to state 46

    tipo_clase                     shift and go to state 202
    metodo                         shift and go to state 261

state 258

    (59) metodo -> tipo_clase VOID ID PARENTESISIZQ parametros PARENTESISDER cuerpo .
    (60) metodo -> tipo_clase VOID ID PARENTESISIZQ parametros PARENTESISDER cuerpo . metodo
    (57) metodo -> . tipo_clase tipo_simple ID PARENTESISIZQ parametros PARENTESISDER cuerpo
    (58) metodo -> . tipo_clase tipo_simple ID PARENTESISIZQ parametros PARENTESISDER cuerpo metodo
    (59) metodo -> . tipo_clase VOID ID PARENTESISIZQ parametros PARENTESISDER cuerpo
    (60) metodo -> . tipo_clase VOID ID PARENTESISIZQ parametros PARENTESISDER cuerpo metodo
    (19) tipo_clase -> . PUBLIC
    (20) tipo_clase -> . PROTECTED
    (21) tipo_clase -> . PRIVATE

    LLAVEDER        reduce using rule 59 (metodo -> tipo_clase VOID ID PARENTESISIZQ parametros PARENTESISDER cuerpo .)
    PUBLIC          shift and go to state 44
    PROTECTED       shift and go to state 45
    PRIVATE         shift and go to state 46

    tipo_clase                     shift and go to state 202
    metodo                         shift and go to state 262

state 259

    (48) dec_varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI . CORCHETEDER PUNTOCOMA dec_varp
    (49) dec_varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI . CORCHETEDER PUNTOCOMA

    CORCHETEDER     shift and go to state 263


state 260

    (46) dec_varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA dec_varp .

    LLAVEIZQ        reduce using rule 46 (dec_varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA dec_varp .)


state 261

    (58) metodo -> tipo_clase tipo_simple ID PARENTESISIZQ parametros PARENTESISDER cuerpo metodo .

    LLAVEDER        reduce using rule 58 (metodo -> tipo_clase tipo_simple ID PARENTESISIZQ parametros PARENTESISDER cuerpo metodo .)


state 262

    (60) metodo -> tipo_clase VOID ID PARENTESISIZQ parametros PARENTESISDER cuerpo metodo .

    LLAVEDER        reduce using rule 60 (metodo -> tipo_clase VOID ID PARENTESISIZQ parametros PARENTESISDER cuerpo metodo .)


state 263

    (48) dec_varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER . PUNTOCOMA dec_varp
    (49) dec_varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 264


state 264

    (48) dec_varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA . dec_varp
    (49) dec_varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA .
    (44) dec_varp -> . tipo_simple ID PUNTOCOMA dec_varp
    (45) dec_varp -> . tipo_simple ID PUNTOCOMA
    (46) dec_varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA dec_varp
    (47) dec_varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
    (48) dec_varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA dec_varp
    (49) dec_varp -> . tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA
    (31) tipo_simple -> . INT
    (32) tipo_simple -> . FLOAT
    (33) tipo_simple -> . CHAR

    LLAVEIZQ        reduce using rule 49 (dec_varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA .)
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27

    tipo_simple                    shift and go to state 208
    dec_varp                       shift and go to state 265

state 265

    (48) dec_varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA dec_varp .

    LLAVEIZQ        reduce using rule 48 (dec_varp -> tipo_simple ID CORCHETEIZQ CTEI CORCHETEDER CORCHETEIZQ CTEI CORCHETEDER PUNTOCOMA dec_varp .)

